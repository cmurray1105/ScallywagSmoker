{
  "{\"sourceRoot\":\"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/christophermurray/Documents/GitHub/ScallywagSmoker\",\"filename\":\"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/christophermurray/Documents/GitHub/ScallywagSmoker\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker",
      "filename": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/server.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _queries = _interopRequireDefault(require(\"./db/queries\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nrequire(\"dotenv\").config();\n\nvar multerS3 = require('multer-s3');\n\nvar multer = require('multer');\n\nvar url = require('url');\n\nvar AWS = require(\"aws-sdk\");\n\nconsole.log(\"ENV\", process.env.BUCKET, process.env.ACCESS_KEY, process.env.SECRET);\nvar s3 = new AWS.S3({\n  accessKeyId: process.env.ACCESS_KEY,\n  secretAccessKey: process.env.SECRET,\n  Bucket: process.env.BUCKET\n}); // Multer ships with storage engines DiskStorage and MemoryStorage\n// And Multer adds a body object and a file or files object to the request object. The body object contains the values of the text fields of the form, the file or files object contains the files uploaded via the form.\n\nvar profileImgUpload = multer({\n  storage: multerS3({\n    s3: s3,\n    bucket: process.env.BUCKET,\n    acl: 'public-read',\n    key: function key(req, file, cb) {\n      cb(null, _path[\"default\"].basename(file.originalname, _path[\"default\"].extname(file.originalname)) + '-' + Date.now() + _path[\"default\"].extname(file.originalname));\n    }\n  }),\n  limits: {\n    fileSize: 2000000\n  },\n  // In bytes: 2000000 bytes = 2 MB\n  fileFilter: function fileFilter(req, file, cb) {\n    checkFileType(file, cb);\n  }\n}).single('profileImage');\n\nfunction checkFileType(file, cb) {\n  // Allowed ext\n  var filetypes = /jpeg|jpg|png|gif/; // Check ext\n\n  var extname = filetypes.test(_path[\"default\"].extname(file.originalname).toLowerCase()); // Check mime\n\n  var mimetype = filetypes.test(file.mimetype);\n\n  if (mimetype && extname) {\n    return cb(null, true);\n  } else {\n    cb('Error: Images Only!');\n  }\n}\n\nvar bodyParser = require(\"body-parser\");\n\nvar PORT = process.env.HTTP_PORT || 8080;\nvar app = (0, _express[\"default\"])();\napp.use(_express[\"default\"][\"static\"](_path[\"default\"].join(__dirname, \"client\", \"build\")));\napp.use(bodyParser.json());\napp.get(\"/\", function (req, res) {\n  res.send(\"just gonna send it\");\n});\napp.get(\"/products\", function (req, res) {\n  // console.log('server', req.query.product)\n  _queries[\"default\"].getProducts(req.query.product, function (err, result) {\n    if (err) {\n      console.log(err);\n    } else {\n      // console.log(result)\n      res.send(result);\n    }\n  });\n});\napp.post(\"/addOrder\", function (req, res) {\n  console.log(\"query\", req.body);\n  var currentDate = new Date().toISOString().slice(0, 19).replace(\"T\", \" \");\n  console.log(\"del date\", req.body.deliveryDate.slice(0, 19).replace(\"T\", \" \"));\n  var order = [req.body.address, req.body.customerName, \"Liberty Hill\", currentDate, req.body.deliveryDate.slice(0, 19).replace(\"T\", \" \"), req.body.neighborhood, req.body.email, req.body.phone]; // console.log(\"order:\", order)\n\n  var id;\n\n  _queries[\"default\"].addDelivery(order, function (err, results) {\n    if (err) {\n      res.send(err);\n    } else {\n      // console.log(\"RESULT FROM ADDING\", results.insertId)\n      var _id = results.insertId;\n\n      for (var item in req.body.cartItems) {\n        var params = [req.body.cartItems[item].id, _id, req.body.cartItems[item].quantity];\n\n        _queries[\"default\"].addItemToOrder(params, function (err, secondResult) {\n          // console.log(\"callback called\")\n          if (err) {\n            res.send(err);\n          } else {\n            console.log(\"sent: \", secondResult);\n          }\n        });\n      }\n\n      res.send(results);\n    }\n  });\n});\napp.post(\"/updateQuantity\", function (req, res) {\n  console.log(req.body.quantity, req.body.productName);\n  var quantity = [req.body.quantity.toString(), req.body.productName];\n\n  _queries[\"default\"].updateQuantity(quantity, function (err, result) {\n    if (err) {\n      res.send(err);\n    } else {\n      res.send(result);\n    }\n  });\n});\napp.get(\"/getOrders\", function (req, res) {\n  _queries[\"default\"].getOrders(function (err, result) {\n    console.log(\"RESULTTTTT1\", result); // result = result[0]\n\n    if (err) {\n      console.log(err);\n    } else {\n      console.log(\"type\", result); // res.send(result)\n\n      var orders = {};\n\n      for (var item in result) {\n        console.log(\"ITEM: \", result[item]);\n\n        if (!orders[result[item].id]) {\n          orders[result[item].id] = {\n            customer: result[item].name,\n            address: result[item].street_address,\n            deliveryDate: result[item].scheduled_delivery,\n            neighborhood: result[item].neighborhood,\n            email: result[item].email,\n            phone: result[item].phone,\n            products: [{\n              productName: result[item].product_name,\n              quantity: result[item].quantity,\n              price: result[item].price\n            }]\n          };\n        } else {\n          orders[result[item].id].products.push({\n            productName: result[item].product_name,\n            quantity: result[item].quantity,\n            price: result[item].price\n          });\n        }\n      }\n\n      res.send(orders);\n    }\n  });\n});\napp.get(\"/categories\", function (req, res) {\n  _queries[\"default\"].getCategories(function (err, result) {\n    if (err) {\n      console.log(err);\n    } else {\n      console.log(\"categories\", result);\n      res.send(result);\n    }\n  });\n});\napp.get(\"/inventory\", function (req, res) {\n  // console.log('server', req.query.product)\n  _queries[\"default\"].getInventory(function (err, result) {\n    if (err) {\n      console.log(err);\n    } else {\n      console.log(\"inventory\", result);\n      res.send(result);\n    }\n  });\n}); // console.log(\"req\", req.body);\n// const file = req.file;\n// const s3FileURL = process.env.AWS_Uploaded_File_URL_LINK;\n//Where you want to store your file\n// var params = {\n//   Bucket: process.env.AWS_BUCKET_NAME,\n//   Key: file.originalname,\n//   Body: file.buffer,\n//   ContentType: file.mimetype,\n//   ACL: \"public-read\"\n// };\n\n/**\n* Single Upload\n*/\n\napp.post('/profile-img-upload', function (req, res) {\n  profileImgUpload(req, res, function (error) {\n    // console.log( 'requestOkokok', req.file );\n    // console.log( 'error', error );\n    if (error) {\n      console.log('errors', error);\n      res.json({\n        error: error\n      });\n    } else {\n      // If File not found\n      if (req.file === undefined) {\n        console.log('Error: No File Selected!');\n        res.json('Error: No File Selected');\n      } else {\n        // If Success\n        var imageName = req.file.key;\n        var imageLocation = req.file.location; // Save the file name into database into profile model\n\n        res.json({\n          image: imageName,\n          location: imageLocation\n        });\n      }\n    }\n  });\n});\napp.post('/addItem', function (req, res) {\n  console.log(\"ITEM OBJECT BEING ADDED\", req.body);\n  var item = [];\n\n  for (var property in req.body) {\n    item.push(req.body[property]);\n  }\n\n  console.log(item);\n\n  _queries[\"default\"].addInventoryItem(item, function (err, result) {\n    if (err) {\n      console.log(err);\n    } else {\n      res.send(result);\n    }\n  });\n});\napp[\"delete\"]('/inventory', function (req, res) {\n  console.log(req);\n  var id = [req.body.id];\n\n  _queries[\"default\"].removeInventoryItem(id, function (err, result) {\n    if (err) {\n      console.log(err);\n    } else {\n      res.send(result);\n    }\n  }); // res.send('Got a DELETE request at /user')\n\n}); // End of single profile upload\n// s3bucket.upload(params, function(err, data) {\n//   if (err) {\n//     res.status(500).json({ error: true, Message: err });\n//   } else {\n//     res.send({ data });\n//     var newFileUploaded = {\n//       description: req.body.description,\n//       fileLink: s3FileURL + file.originalname,\n//       s3_key: params.Key\n//     };\n// var document = new DOCUMENT(newFileUploaded);\n// document.save(function(error, newFile) {\n//   if (error) {\n//     throw error;\n//   }\n// });\n\napp.listen(PORT, function () {\n  console.log(\"Server listening at port \".concat(PORT, \". cwm\"));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "require",
        "config",
        "multerS3",
        "multer",
        "url",
        "AWS",
        "console",
        "log",
        "process",
        "env",
        "BUCKET",
        "ACCESS_KEY",
        "SECRET",
        "s3",
        "S3",
        "accessKeyId",
        "secretAccessKey",
        "Bucket",
        "profileImgUpload",
        "storage",
        "bucket",
        "acl",
        "key",
        "req",
        "file",
        "cb",
        "path",
        "basename",
        "originalname",
        "extname",
        "Date",
        "now",
        "limits",
        "fileSize",
        "fileFilter",
        "checkFileType",
        "single",
        "filetypes",
        "test",
        "toLowerCase",
        "mimetype",
        "bodyParser",
        "PORT",
        "HTTP_PORT",
        "app",
        "use",
        "express",
        "join",
        "__dirname",
        "json",
        "get",
        "res",
        "send",
        "db",
        "getProducts",
        "query",
        "product",
        "err",
        "result",
        "post",
        "body",
        "currentDate",
        "toISOString",
        "slice",
        "replace",
        "deliveryDate",
        "order",
        "address",
        "customerName",
        "neighborhood",
        "email",
        "phone",
        "id",
        "addDelivery",
        "results",
        "insertId",
        "item",
        "cartItems",
        "params",
        "quantity",
        "addItemToOrder",
        "secondResult",
        "productName",
        "toString",
        "updateQuantity",
        "getOrders",
        "orders",
        "customer",
        "name",
        "street_address",
        "scheduled_delivery",
        "products",
        "product_name",
        "price",
        "push",
        "getCategories",
        "getInventory",
        "error",
        "undefined",
        "imageName",
        "imageLocation",
        "location",
        "image",
        "property",
        "addInventoryItem",
        "removeInventoryItem",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/",
      "sourcesContent": [
        "import path from \"path\";\nimport express from \"express\";\nrequire(\"dotenv\").config();\nimport db from \"./db/queries\";\nconst multerS3 = require( 'multer-s3' );\nconst multer = require('multer');\nconst url = require('url');\nconst AWS = require(\"aws-sdk\");\n\nconsole.log(\"ENV\", process.env.BUCKET, process.env.ACCESS_KEY, process.env.SECRET )\nconst s3 = new AWS.S3({\n  accessKeyId: process.env.ACCESS_KEY,\n  secretAccessKey: process.env.SECRET,\n  Bucket: process.env.BUCKET\n});\n// Multer ships with storage engines DiskStorage and MemoryStorage\n// And Multer adds a body object and a file or files object to the request object. The body object contains the values of the text fields of the form, the file or files object contains the files uploaded via the form.\nconst profileImgUpload = multer({\n  storage: multerS3({\n   s3: s3,\n   bucket: process.env.BUCKET,\n   acl: 'public-read',\n   key: function (req, file, cb) {\n    cb(null, path.basename( file.originalname, path.extname( file.originalname ) ) + '-' + Date.now() + path.extname( file.originalname ) )\n   }\n  }),\n  limits:{ fileSize: 2000000 }, // In bytes: 2000000 bytes = 2 MB\n  fileFilter: function( req, file, cb ){\n   checkFileType( file, cb );\n  }\n }).single('profileImage');\n\n function checkFileType( file, cb ){\n  // Allowed ext\n  const filetypes = /jpeg|jpg|png|gif/;\n  // Check ext\n  const extname = filetypes.test( path.extname( file.originalname ).toLowerCase());\n  // Check mime\n  const mimetype = filetypes.test( file.mimetype );\n if( mimetype && extname ){\n   return cb( null, true );\n  } else {\n   cb( 'Error: Images Only!' );\n  }\n }\n\n\nconst bodyParser = require(\"body-parser\");\nconst PORT = process.env.HTTP_PORT || 8080;\nconst app = express();\n\napp.use(express.static(path.join(__dirname, \"client\", \"build\")));\napp.use(bodyParser.json());\n\napp.get(\"/\", (req, res) => {\n  res.send(\"just gonna send it\");\n});\n\napp.get(\"/products\", (req, res) => {\n  // console.log('server', req.query.product)\n  db.getProducts(req.query.product, (err, result) => {\n    if (err) {\n      console.log(err);\n    } else {\n      // console.log(result)\n      res.send(result);\n    }\n  });\n});\napp.post(\"/addOrder\", (req, res) => {\n  console.log(\"query\", req.body);\n  let currentDate = new Date().toISOString().slice(0, 19).replace(\"T\", \" \");\n  console.log(\"del date\", req.body.deliveryDate.slice(0, 19).replace(\"T\", \" \"));\n  const order = [\n    req.body.address,\n    req.body.customerName,\n    \"Liberty Hill\",\n    currentDate,\n    req.body.deliveryDate.slice(0, 19).replace(\"T\", \" \"),\n    req.body.neighborhood,\n    req.body.email,\n    req.body.phone,\n  ];\n  // console.log(\"order:\", order)\n  let id;\n  db.addDelivery(order, (err, results) => {\n    if (err) {\n      res.send(err);\n    } else {\n      // console.log(\"RESULT FROM ADDING\", results.insertId)\n      let id = results.insertId;\n      for (let item in req.body.cartItems) {\n        let params = [\n          req.body.cartItems[item].id,\n          id,\n          req.body.cartItems[item].quantity,\n        ];\n        db.addItemToOrder(params, (err, secondResult) => {\n          // console.log(\"callback called\")\n          if (err) {\n            res.send(err);\n          } else {\n            console.log(\"sent: \", secondResult);\n          }\n        });\n      }\n      res.send(results);\n    }\n  });\n});\napp.post(\"/updateQuantity\", (req, res) => {\n  console.log(req.body.quantity, req.body.productName);\n  let quantity = [req.body.quantity.toString(), req.body.productName];\n  db.updateQuantity(quantity, (err, result) => {\n    if (err) {\n      res.send(err);\n    } else {\n      res.send(result);\n    }\n  });\n});\napp.get(\"/getOrders\", (req, res) => {\n  db.getOrders((err, result) => {\n    console.log(\"RESULTTTTT1\", result);\n    // result = result[0]\n    if (err) {\n      console.log(err);\n    } else {\n      console.log(\"type\", result);\n      // res.send(result)\n      let orders = {};\n\n      for (let item in result) {\n        console.log(\"ITEM: \", result[item]);\n        if (!orders[result[item].id]) {\n          orders[result[item].id] = {\n            customer: result[item].name,\n            address: result[item].street_address,\n            deliveryDate: result[item].scheduled_delivery,\n            neighborhood: result[item].neighborhood,\n            email: result[item].email,\n            phone: result[item].phone,\n            products: [\n              {\n                productName: result[item].product_name,\n                quantity: result[item].quantity,\n                price: result[item].price,\n              },\n            ],\n          };\n        } else {\n          orders[result[item].id].products.push({\n            productName: result[item].product_name,\n            quantity: result[item].quantity,\n            price: result[item].price,\n          });\n        }\n      }\n      res.send(orders);\n    }\n  });\n});\napp.get(\"/categories\", (req, res) => {\n  db.getCategories((err, result) => {\n    if (err) {\n      console.log(err);\n    } else {\n      console.log(\"categories\", result);\n      res.send(result);\n    }\n  });\n});\n\napp.get(\"/inventory\", (req, res) => {\n  // console.log('server', req.query.product)\n  db.getInventory((err, result) => {\n    if (err) {\n      console.log(err);\n    } else {\n      console.log(\"inventory\", result);\n      res.send(result);\n    }\n  });\n});\n\n\n  // console.log(\"req\", req.body);\n  // const file = req.file;\n  // const s3FileURL = process.env.AWS_Uploaded_File_URL_LINK;\n\n\n    //Where you want to store your file\n\n    // var params = {\n    //   Bucket: process.env.AWS_BUCKET_NAME,\n    //   Key: file.originalname,\n    //   Body: file.buffer,\n    //   ContentType: file.mimetype,\n    //   ACL: \"public-read\"\n    // };\n\n    /**\n * Single Upload\n */\n\n\napp.post( '/profile-img-upload', ( req, res ) => {\n  profileImgUpload( req, res, ( error ) => {\n    // console.log( 'requestOkokok', req.file );\n    // console.log( 'error', error );\n    if( error ){\n     console.log( 'errors', error );\n     res.json( { error: error } );\n    } else {\n     // If File not found\n     if( req.file === undefined ){\n      console.log( 'Error: No File Selected!' );\n      res.json( 'Error: No File Selected' );\n     } else {\n      // If Success\n      const imageName = req.file.key;\n      const imageLocation = req.file.location;\n  // Save the file name into database into profile model\n  res.json( {\n       image: imageName,\n       location: imageLocation\n      } );\n     }\n    }\n   });\n  });\n\n  app.post('/addItem', (req, res)=>{\n    console.log(\"ITEM OBJECT BEING ADDED\", req.body)\n    let item = []\n    for (let property in req.body){\n      item.push(req.body[property])\n    }\n    console.log(item)\n    db.addInventoryItem(item, (err, result)=>{\n      if (err){\n        console.log(err)\n      }else{\n        res.send(result)\n      }\n    })\n  })\n\n  app.delete('/inventory', function (req, res) {\n    console.log(req)\n    let id = [req.body.id]\n    db.removeInventoryItem(id, (err, result)=>{\n      if (err){\n        console.log(err)\n      }else{\n        res.send(result)\n      }\n    });\n    // res.send('Got a DELETE request at /user')\n  })\n  // End of single profile upload\n\n\n    // s3bucket.upload(params, function(err, data) {\n    //   if (err) {\n    //     res.status(500).json({ error: true, Message: err });\n    //   } else {\n    //     res.send({ data });\n    //     var newFileUploaded = {\n    //       description: req.body.description,\n    //       fileLink: s3FileURL + file.originalname,\n    //       s3_key: params.Key\n    //     };\n        // var document = new DOCUMENT(newFileUploaded);\n        // document.save(function(error, newFile) {\n        //   if (error) {\n        //     throw error;\n        //   }\n        // });\n\napp.listen(PORT, () => {\n  console.log(`Server listening at port ${PORT}. cwm`);\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1612725654496
  },
  "{\"sourceRoot\":\"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/db/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/christophermurray/Documents/GitHub/ScallywagSmoker\",\"filename\":\"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/db/queries.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/christophermurray/Documents/GitHub/ScallywagSmoker\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/db/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker",
      "filename": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/db/queries.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/db/queries.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/db/queries.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/db/",
        "sourceFileName": "queries.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar path = require('path'); // require('dotenv').config()\n\n\nvar mysql = require('mysql');\n\nvar logMeIn = require('./secret');\n\nvar connection = mysql.createConnection({\n  host: process.env.RDS_HOSTNAME || logMeIn.HOST,\n  user: process.env.RDS_USERNAME || logMeIn.DB_USER,\n  password: process.env.RDS_PASSWORD || logMeIn.DB_PASSWORD,\n  database: process.env.RDS_DB_NAME || logMeIn.DATABASE\n});\nconnection.connect(function (err) {\n  if (err) {\n    console.log(\"DB CONNECTION FAILED\", err);\n    return;\n  }\n\n  console.log(\"Connected to BBQ DB\");\n  console.log(process.env.DB_PASSWORD);\n});\n\nvar getProducts = function getProducts(category, cb) {\n  connection.query(\"SELECT * FROM product WHERE category = ?;\", [category], function (err, result) {\n    if (err) {\n      cb(err, null);\n    } else {\n      cb(null, result);\n    }\n  });\n};\n\nvar addDelivery = function addDelivery(params, cb) {\n  connection.query('INSERT INTO orders (street_address, name, city, ordered_at, scheduled_delivery, neighborhood, email, phone) VALUES (?, ?, ?, ?, ?, ?, ?, ?);', params, function (err, results) {\n    if (err) {\n      cb(err, null);\n    } else {\n      cb(null, results);\n    }\n  });\n};\n\nvar addItemToOrder = function addItemToOrder(params, cb) {\n  // console.log(\"params\", typeof params)\n  connection.query('INSERT INTO order_item (product_id, order_id, quantity) VALUES (?, ?, ?);', params, function (err, result) {\n    if (err) {\n      cb(err, null);\n    } else {\n      cb(null, result);\n    }\n  });\n};\n\nvar getOrders = function getOrders(cb) {\n  connection.query('SELECT orders.id, order_item.quantity, product.product_name, product.price, orders.scheduled_delivery, orders.neighborhood, orders.name, orders.street_address, orders.phone, orders.email FROM ((order_item INNER JOIN product ON order_item.product_id = product.id) INNER JOIN orders on order_item.order_id = orders.id);', function (err, result) {\n    if (err) {\n      cb(err, null);\n    } else {\n      cb(null, result);\n      console.log(result);\n    }\n  });\n};\n\nvar updateQuantity = function updateQuantity(params, cb) {\n  console.log(\"params in quantity update\", params);\n  console.log(\"query called\");\n  connection.query('UPDATE product SET QUANTITY =? WHERE product.product_name=?', params, function (err, result) {\n    if (err) {\n      cb(err, null);\n    } else {\n      cb(null, result);\n    }\n  });\n};\n\nvar getCategories = function getCategories(cb) {\n  connection.query('SELECT * FROM categories', function (err, result) {\n    if (err) {\n      cb(err, null);\n    } else {\n      cb(null, result);\n    }\n  });\n};\n\nvar getInventory = function getInventory(cb) {\n  connection.query('SELECT * from product', function (err, result) {\n    if (err) {\n      cb(err, null);\n    } else {\n      cb(null, result);\n    }\n  });\n};\n\nvar addInventoryItem = function addInventoryItem(item, cb) {\n  connection.query(\"INSERT INTO product (product_name, category, quantity, image_url, price) VALUES (?, ?, ?, ?, ?)\", item, function (err, result) {\n    if (err) {\n      cb(err, null);\n    } else {\n      cb(null, result);\n    }\n  });\n}; // let id = [5]\n\n\nvar removeInventoryItem = function removeInventoryItem(id, cb) {\n  console.log(\"id\", id);\n  connection.query(\"DELETE FROM `product` WHERE id = ?\", id, function (err, result) {\n    if (err) {\n      cb(err, null);\n    } else {\n      cb(null, result);\n    }\n  });\n};\n\nmodule.exports = {\n  removeInventoryItem: removeInventoryItem,\n  addInventoryItem: addInventoryItem,\n  getProducts: getProducts,\n  getOrders: getOrders,\n  addDelivery: addDelivery,\n  addItemToOrder: addItemToOrder,\n  updateQuantity: updateQuantity,\n  getCategories: getCategories,\n  getInventory: getInventory\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "queries.js"
      ],
      "names": [
        "path",
        "require",
        "mysql",
        "logMeIn",
        "connection",
        "createConnection",
        "host",
        "process",
        "env",
        "RDS_HOSTNAME",
        "HOST",
        "user",
        "RDS_USERNAME",
        "DB_USER",
        "password",
        "RDS_PASSWORD",
        "DB_PASSWORD",
        "database",
        "RDS_DB_NAME",
        "DATABASE",
        "connect",
        "err",
        "console",
        "log",
        "getProducts",
        "category",
        "cb",
        "query",
        "result",
        "addDelivery",
        "params",
        "results",
        "addItemToOrder",
        "getOrders",
        "updateQuantity",
        "getCategories",
        "getInventory",
        "addInventoryItem",
        "item",
        "removeInventoryItem",
        "id",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/db/",
      "sourcesContent": [
        "\nconst path = require('path')\n// require('dotenv').config()\nconst mysql = require('mysql');\nconst logMeIn = require('./secret')\nconst connection = mysql.createConnection({\n  host: process.env.RDS_HOSTNAME  || logMeIn.HOST,\n  user: process.env.RDS_USERNAME ||logMeIn.DB_USER,\n  password: process.env.RDS_PASSWORD || logMeIn.DB_PASSWORD,\n  database: process.env.RDS_DB_NAME || logMeIn.DATABASE\n});\n\nconnection.connect((err) => {\n  if (err) {\n    console.log(\"DB CONNECTION FAILED\", err);\n    return;\n  }\n  console.log(\"Connected to BBQ DB\");\n  console.log(process.env.DB_PASSWORD)\n});\n\nconst getProducts = (category, cb) =>{\n  connection.query(`SELECT * FROM product WHERE category = ?;`, [category], (err, result) =>{\n    if (err) {\n      cb (err, null)\n    } else {\n      cb (null, result)\n  }\n})\n}\nconst addDelivery = (params, cb) => {\n  connection.query('INSERT INTO orders (street_address, name, city, ordered_at, scheduled_delivery, neighborhood, email, phone) VALUES (?, ?, ?, ?, ?, ?, ?, ?);', params, (err, results)=>{\n    if (err) {\n      cb(err, null)\n    } else {\n      cb(null, results)\n    }\n  })\n}\nconst addItemToOrder= (params, cb) => {\n  // console.log(\"params\", typeof params)\n  connection.query('INSERT INTO order_item (product_id, order_id, quantity) VALUES (?, ?, ?);', params, (err, result)=>{\n    if (err) {\n      cb(err, null)\n    } else {\n      cb(null, result)\n    }\n  })\n}\n\nconst getOrders = (cb)=>{\n  connection.query('SELECT orders.id, order_item.quantity, product.product_name, product.price, orders.scheduled_delivery, orders.neighborhood, orders.name, orders.street_address, orders.phone, orders.email FROM ((order_item INNER JOIN product ON order_item.product_id = product.id) INNER JOIN orders on order_item.order_id = orders.id);', (err, result)=>{\n  if (err) {\n    cb (err, null)\n  } else {\n    cb (null, result)\n    console.log(result)\n  }\n})\n}\nconst updateQuantity = (params, cb)=>{\n  console.log(\"params in quantity update\", params)\n  console.log(\"query called\")\n  connection.query('UPDATE product SET QUANTITY =? WHERE product.product_name=?', params, (err, result)=>{\n    if (err) {\n      cb(err, null)\n    } else {\n      cb(null, result)\n    }\n})\n}\nconst getCategories = (cb)=>{\n  connection.query('SELECT * FROM categories', (err, result)=>{\n    if (err) {\n      cb(err, null)\n    } else {\n      cb(null, result)\n    }\n  })\n}\nconst getInventory = (cb)=>{\n  connection.query('SELECT * from product', (err, result)=>{\n    if (err) {\n      cb(err, null)\n    } else {\n      cb(null, result)\n    }\n  })\n}\nconst addInventoryItem = (item, cb)=>{\n  connection.query(\"INSERT INTO product (product_name, category, quantity, image_url, price) VALUES (?, ?, ?, ?, ?)\", item, (err, result)=>{\n    if (err){\n      cb(err, null)\n    }else{\n      cb(null, result)\n    }\n  })\n}\n\n// let id = [5]\nconst removeInventoryItem = (id, cb)=>{\n  console.log(\"id\", id)\n  connection.query(\"DELETE FROM `product` WHERE id = ?\", id, (err, result)=>{\n    if (err){\n      cb(err, null)\n    }else{\n      cb(null, result)\n    }\n  })\n}\n\nmodule.exports ={removeInventoryItem, addInventoryItem, getProducts, getOrders, addDelivery, addItemToOrder, updateQuantity, getCategories, getInventory}"
      ]
    },
    "sourceType": "script",
    "mtime": 1612725320715
  },
  "{\"sourceRoot\":\"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/db/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/christophermurray/Documents/GitHub/ScallywagSmoker\",\"filename\":\"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/db/secret.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/christophermurray/Documents/GitHub/ScallywagSmoker\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/db/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker",
      "filename": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/db/secret.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/db/secret.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/db/secret.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/db/",
        "sourceFileName": "secret.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar bbqSQL = {\n  HOST: 'localhost',\n  DB_USER: 'root',\n  DB_PASSWORD: 'Bruins2011!',\n  DATABASE: 'barbecue'\n};\nmodule.exports = bbqSQL;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlY3JldC5qcyJdLCJuYW1lcyI6WyJiYnFTUUwiLCJIT1NUIiwiREJfVVNFUiIsIkRCX1BBU1NXT1JEIiwiREFUQUJBU0UiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLE1BQU0sR0FBRztBQUNiQyxFQUFBQSxJQUFJLEVBQUUsV0FETztBQUViQyxFQUFBQSxPQUFPLEVBQUUsTUFGSTtBQUdiQyxFQUFBQSxXQUFXLEVBQUUsYUFIQTtBQUliQyxFQUFBQSxRQUFRLEVBQUU7QUFKRyxDQUFmO0FBTUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQk4sTUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2NocmlzdG9waGVybXVycmF5L0RvY3VtZW50cy9HaXRIdWIvU2NhbGx5d2FnU21va2VyL2RiLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGJicVNRTCA9IHtcbiAgSE9TVDogJ2xvY2FsaG9zdCcsXG4gIERCX1VTRVI6ICdyb290JyxcbiAgREJfUEFTU1dPUkQ6ICdCcnVpbnMyMDExIScsXG4gIERBVEFCQVNFOiAnYmFyYmVjdWUnXG59XG5tb2R1bGUuZXhwb3J0cyA9IGJicVNRTCJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "secret.js"
      ],
      "names": [
        "bbqSQL",
        "HOST",
        "DB_USER",
        "DB_PASSWORD",
        "DATABASE",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE,WADO;AAEbC,EAAAA,OAAO,EAAE,MAFI;AAGbC,EAAAA,WAAW,EAAE,aAHA;AAIbC,EAAAA,QAAQ,EAAE;AAJG,CAAf;AAMAC,MAAM,CAACC,OAAP,GAAiBN,MAAjB",
      "sourceRoot": "/Users/christophermurray/Documents/GitHub/ScallywagSmoker/db/",
      "sourcesContent": [
        "const bbqSQL = {\n  HOST: 'localhost',\n  DB_USER: 'root',\n  DB_PASSWORD: 'Bruins2011!',\n  DATABASE: 'barbecue'\n}\nmodule.exports = bbqSQL"
      ]
    },
    "sourceType": "script",
    "mtime": 1610080998666
  }
}