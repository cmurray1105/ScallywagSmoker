{"version":3,"sources":["components/Banner.js","components/CheckoutModal.js","components/Cart.js","components/Products.js","components/Menu.js","components/Navbar.js","components/Home.js","components/Row.js","components/Orders.jsx","App.js","reportWebVitals.js","index.js"],"names":["Banner","props","className","src","CheckoutModal","React","useState","open","setOpen","neighborhood","handleChange","customerName","handleNameChange","streetAddress","handleStreetChange","Date","startDate","setStartDate","email","handleEmailChange","phone","handlePhoneChange","console","log","useStyles","makeStyles","theme","paper","position","width","maxHeight","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","outline","top","left","transform","borderRadius","createMuiTheme","overrides","MuiButton","text","fontWeight","color","height","classes","handleClose","body","id","priceString","onSubmit","event","preventDefault","axios","post","address","deliveryDate","cartItems","then","result","templateParams","from_name","to_name","message_html","productString","products","item","push","i","length","generateItemList","emailjs","quantity","originalQuantity","productName","catch","err","clearOrder","value","onChange","e","target","type","selected","date","minDate","maxDate","Button","toISOString","slice","replace","ThemeProvider","onClick","Modal","onClose","aria-labelledby","aria-describedby","Cart","convertPriceToString","total","itemMap","Object","keys","selectedItems","map","price","Products","loaded","addToCart","currentProduct","setProduct","useMediaQuery","currentCard","setCurrentCard","selectedQuantity","currentQuantity","root","marginTop","marginBottom","float","media","formMedia","productBox","display","flexFlow","margin","cardContainer","boxSizing","marginLeft","marginRight","paddingLeft","paddingRight","useStylesModal","textAlign","form","ModalClasses","product_name","image_url","parseInt","alert","items","createPullDown","productData","Box","p","m","product","toString","includes","split","Card","onMouseOver","onMouseOut","raised","CardActionArea","CardMedia","image","title","CardContent","Typography","gutterBottom","variant","component","CardActions","Menu","setValue","hovered","setHovered","justifyContent","scroller","flexGrow","mapTabs","categories","category","Tab","onMouseEnter","cat","onMouseLeave","label","Tabs","scrollButtons","newValue","getProducts","centered","Navbar","zIndex","button","anchorEl","setAnchorEl","Boolean","undefined","currentTarget","Popper","placement","disablePortal","modifiers","arrow","enabled","element","Home","getCategories","Axios","get","data","cats","name","setState","state","cart","bind","this","params","Component","useRowStyles","borderBottom","Row","row","rowSplit","year","day","month","Fragment","TableRow","TableCell","IconButton","aria-label","size","scope","align","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Table","TableHead","TableBody","productRow","Orders","rows","orders","createData","fillRows","getOrders","order","customer","TableContainer","Paper","App","path","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f8dbc1f.chunk.js","sourcesContent":["import React from 'react';\n\nconst Banner = (props) =>{\nreturn (\n  <div className='bannerContainer'>\n    <img className='logo' src={'https://bbqbucket2020.s3.us-east-2.amazonaws.com/logo.jpg'}/>\n  </div>\n)\n}\nexport default Banner;","import React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport DatePicker from \"react-datepicker\";\nimport axios from \"axios\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as emailjs from 'emailjs-com'\n// import DayPicker from 'react-day-picker';\n// import DayPickerInput from 'react-day-picker/DayPickerInput';\n// import 'react-day-picker/lib/style.css';\n\n\nemailjs.init(\"user_975JwJzPB6r4yxiDzOfHn\");\n\nexport default function CheckoutModal(props) {\n  const [open, setOpen] = React.useState(false);\n  const [neighborhood, handleChange] = React.useState(\"Santa Rita Ranch South\");\n  const [customerName, handleNameChange] = React.useState(\"\");\n  const [streetAddress, handleStreetChange] = React.useState(\"\");\n  const [startDate, setStartDate] = React.useState(new Date());\n  const [email, handleEmailChange] = React.useState(\"\");\n  const [phone, handlePhoneChange] = React.useState(null);\n\n  console.log(\"props\", props)\n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      position: \"absolute\",\n      width: 400,\n      maxHeight: 800,\n      backgroundColor: theme.palette.background.paper,\n      border: \"none\",\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n      outline: \"none\",\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      borderRadius: '5%'\n    },\n  }));\n\n  const theme = createMuiTheme({\n    overrides: {\n      // Style sheet name ⚛️\n      MuiButton: {\n        // Name of the rule\n        text: {\n          // Some CSS\n          background: 'linear-gradient(45deg, rgb(204, 146, 146) 30%, rgb(241, 210, 210) 90%)',\n          fontWeight : 'bold',\n          borderRadius: 3,\n          border: 0,\n          color: 'white',\n          height: 48,\n          padding: '0 30px',\n          boxShadow: '0 3px 5px 2px  grey',\n        },\n\n      },\n    },\n  });\n\n\n  const classes = useStyles();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    axios\n.post(\"/addOrder\", {\n        address: streetAddress,\n        customerName: customerName,\n        deliveryDate: startDate,\n        neighborhood: neighborhood,\n        cartItems: props.cartItems,\n        email: email,\n        phone: phone\n      })\n\n      .then((result) => {\n        let generateItemList = ()=> {\n          let productString= ''\n          let products = []\n          for (let item in props.cartItems){\n            products.push(item)\n          }\n          for (let i = 0; i < products.length; i++){\n            if (i === products.length-1){\n              productString += `${products[i]}`\n            } else {\n              productString += `${products[i]}, `\n            }\n          }\n          console.log(productString)\n          return productString\n      }\n        let templateParams = {\n          from_name: 'christopher.murray.bbqdev@gmail.com',\n          to_name: email,\n          customerName: customerName,\n          message_html: generateItemList()\n         }\n        emailjs.send(\n          'service_6gxzrwa',\n          'template_fu5eins',\n           templateParams,\n          'user_975JwJzPB6r4yxiDzOfHn'\n     )\n        for (let item in props.cartItems){\n          axios\n          .post('./updateQuantity', {quantity: (props.cartItems[item].originalQuantity - props.cartItems[item].quantity), productName: item}).then((result)=>{\n            // console.log(\"result of update\", result)\n\n          })\n          .catch((err)=>{\n            console.log(err)\n          })\n        }\n          handleClose()\n          props.clearOrder()\n\n      })\n        .catch((err)=>{\n          if (err){\n            console.log(err);\n          }\n        })\n        }\n\n  const body = (\n    <div className={classes.paper}>\n      <h2 id=\"simple-modal-title\">Delivery Info</h2>\n      <h3>Total ${props.priceString}</h3>\n      <div className=\"order-summary\"></div>\n      <div className=\"order-form\">\n        <form onSubmit={handleSubmit}>\n          <label>\n            Select Your Neighborhood:\n            <br />\n            <select\n              value={neighborhood}\n              onChange={(e) => handleChange(e.target.value)}\n            >\n              <option value=\"Santa Rita Ranch South\">Santa Rita Ranch South</option>\n              <option value=\"Santa Rita Ranch North\">Santa Rita Ranch North</option>\n              <option value=\"Morningstar\">Morningstar</option>\n            </select>\n          </label>\n          <br />\n          <label>\n            Name:\n            <br />\n            <input\n              type=\"text\"\n              value={customerName}\n              onChange={(e) => handleNameChange(e.target.value)}\n            />\n          </label>\n          <br />\n          <label>\n            Street Address:\n            <br />\n            <input\n              type=\"text\"\n              value={streetAddress}\n              onChange={(e) => handleStreetChange(e.target.value)}\n            />\n          </label>\n          <br />\n          <label>\n            Email Address:\n            <br />\n            <input\n              type=\"text\"\n              value={email}\n              onChange={(e) => handleEmailChange(e.target.value)}\n            />\n          </label>\n          <br />\n          <label>\n            Phone:\n            <br />\n            <input\n              type=\"text\"\n              value={phone}\n              onChange={(e) => handlePhoneChange(e.target.value)}\n            />\n          </label>\n          <br />\n          <label>\n            Delivery Date\n            <br />\n            <DatePicker\n              selected={startDate}\n              onChange={(date) => setStartDate(date)}\n              minDate={new Date()}\n              maxDate={new Date(2021, 1, 31)}\n      //         disabledDays={[\n      //   {\n      //     after: new Date(2021, 1, 31),\n      //     before: new Date(),\n      //   }\n      // ]}\n      />\n            {/* <br/> */}\n          </label>\n          <br />\n          <Button type=\"submit\" value=\"Submit\">Submit</Button>\n        </form>\n      </div>\n    </div>\n  );\n  console.log(new Date().toISOString().slice(0, 19).replace(\"T\", \" \"));\n  return (\n    <div>\n        <ThemeProvider theme={theme}>\n      <Button className=\"checkoutButton\" onClick={handleOpen}>\n      {/* <FontAwesomeIcon icon={[\"far\", \"coffee\"]} /> */}\n      Checkout\n      </Button>\n      </ThemeProvider>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport CheckoutModal from './CheckoutModal'\n\nconst Cart = (props) =>{\n// const convertPriceToString = (price)=>{\n//   console.log(\"prop prop prop prop\", props)\n//     console.log(\"func console\", props.cartItems)\n//   let priceString = price.toString();\n//   if (priceString.includes(\".\")) {\n//     if (priceString.split(\".\")[1].length === 1) {\n//       priceString += \"0\";\n//     }\n//     if (priceString.split(\".\")[1].length > 2) {\n//       priceString =\n//         priceString.split(\".\")[0] +\n//         \".\" +\n//         priceString.split(\".\")[1].slice(0, 2);\n//     }\n//   } else {\n//     priceString += \".00\";\n//   }\n//   return priceString\n// }\nlet priceString = props.convertPriceToString(props.total)\n\n  let itemMap = null;\n  if (props.cartItems){\n    console.log(Object.keys(props.cartItems), \"item length\")\n    let selectedItems = Object.keys(props.cartItems);\n    console.log(\"products\", props.products, \"selected Items\", typeof selectedItems[0])\n    itemMap = selectedItems.map((item)=>(\n      <div>\n        {props.cartItems[item].quantity} X {item}: ${props.convertPriceToString(props.cartItems[item].price * props.cartItems[item].quantity)}\n      </div>\n    ))\n  }\n  return(\n  <div className={'cart-container'}>\n  {itemMap}\n\n  Total Due: ${priceString}\n  <CheckoutModal clearOrder={props.clearOrder} priceString={priceString} total={props.total} products={props.products} cartItems={props.cartItems}/>\n  </div>\n\n  )\n}\nexport default Cart;","import React, { useState, useEffect } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport { Modal } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\n// import ProductModal from './ProductModal';\n\nconst Products = ({ loaded, products, addToCart, cartItems, convertPriceToString}) => {\n  const [open, setOpen] = React.useState(false);\n  const [quantity, handleChange] = React.useState(\"0\");\n  const [customerName, handleNameChange] = React.useState(\"\");\n  const [currentProduct, setProduct] = React.useState({});\n  const matches = useMediaQuery(\"(min-width:600px)\");\n  const [currentCard, setCurrentCard] = React.useState(\"\");\n\n  console.log(\"T/F?\", !cartItems);\n  let selectedQuantity = 0;\n  let currentQuantity = currentProduct.quantity;\n\n  const useStyles = makeStyles({\n    root: {\n      width: 250,\n      marginTop: 25,\n      marginBottom: 25,\n      height: 400,\n      outline: \"none\",\n      border: \"none\",\n      float: 'left',\n      // alignItems: \"center\",\n    },\n    media: {\n      height: 250,\n      width: 250,\n    },\n    formMedia: {\n      width: \"100%\",\n      height: \"auto\",\n      borderRadius: \"10%\",\n    },\n    productBox: {\n      display: \"flex\",\n      flexFlow: \"row wrap\",\n      padding: \"8px\",\n      margin: \"8px\"\n    },\n    cardContainer: {\n      display: \"block\",\n      boxSizing: \"border-box\",\n      marginLeft:\"auto\",\n      marginRight:\"auto\",\n      paddingLeft: \"16px\",\n      paddingRight:\"16px\"\n    }\n\n  });\n  const useStylesModal = makeStyles((theme) => ({\n    paper: {\n      position: \"absolute\",\n      width: 400,\n      maxHeight: 800,\n      backgroundColor: theme.palette.background.paper,\n      border: \"none\",\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n      outline: \"none\",\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      margin: '0 auto',\n      display: 'table',\n      textAlign: \"center\",\n      borderRadius: \"5%\",\n    },\n    form: {\n      display: \"inline-block\",\n      textAlign: \"center\",\n      left: \"40%\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n    // productBox\n  }));\n\n  const classes = useStyles();\n  const ModalClasses = useStylesModal();\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  if (cartItems[currentProduct.product_name]) {\n    selectedQuantity = cartItems[currentProduct.product_name].quantity;\n    currentQuantity = currentProduct.quantity - selectedQuantity;\n  }\n\n  const handleSubmit = (event) => {\n    console.log(\n      \"currentQuantity\",\n      currentQuantity,\n      \"selectedQuantity\",\n      selectedQuantity\n    );\n    event.preventDefault();\n    console.log(\"currentProduct\", currentProduct);\n    // console.log(\"quantitty\", typeof quantity)\n    if (quantity==='0'){\n      alert('Please select a quantity greater than zero')\n    } else {\n\n        addToCart({\n          productName: currentProduct.product_name,\n          quantity: parseInt(quantity),\n          price: currentProduct.price,\n          id: currentProduct.id,\n          originalQuantity: currentProduct.quantity,\n        });\n        // getProducts(currentProduct.category)\n        handleClose();\n\n    }\n  };\n  let createPullDown = () => {\n    let items = [];\n    for (let i = 0; i <= currentQuantity; i++) {\n      items.push(<option value={i}>{i}</option>);\n    }\n    return items;\n  };\n\n  const body = (\n    <div className={ModalClasses.paper}>\n    {console.log(\"ASJIFJIJDSF\",  currentProduct.price)}\n      <img className={classes.formMedia} src={currentProduct.image_url} />\n      <h2 id=\"simple-modal-title\">{currentProduct.product_name}</h2>\n      <h3>${convertPriceToString(parseInt(currentProduct.price))}</h3>\n      <div className=\"order-form\">\n        {currentQuantity < 5 ? <div>Only {currentQuantity} left</div> : null}\n        <form className={ModalClasses.form} onSubmit={handleSubmit}>\n          <label>\n            Quantity:\n            <select onChange={(e) => handleChange(e.target.value)}>\n              {createPullDown()}\n            </select>\n          </label>\n          <Button type=\"submit\">\n            <AddShoppingCartIcon />\n          </Button>\n        </form>\n      </div>\n    </div>\n  );\n  let productData = [];\n  console.log(loaded);\n  if (!loaded) {\n    return null;\n  } else {\n    productData = products;\n    return (\n      <Box\n      className={classes.productBox}\n        display=\"flex\"\n        // flexwrap=\"nowrap\"\n        p={1}\n        m={1}\n        // bgcolor=\"background.paper\"\n        // css={{ maxWidth: 300 }}\n      >\n        {productData.map((product) => {\n          console.log(\"ZZZZZZZZZ\", product);\n          let priceString = product.price.toString();\n          console.log(priceString.length);\n          if (priceString.includes(\".\")) {\n            if (priceString.split(\".\")[1].length === 1) {\n              console.log(\"NEW STRING\", priceString)\n              priceString += \"0\";\n              console.log(\"STRING AGAIN\", priceString)\n            }\n          } else {\n            priceString += \".00\";\n          }\n\n          return (\n            <div className={classes.cardContainer}>\n              <Card\n                onMouseOver={() => {\n                  setCurrentCard(product.product_name);\n                }}\n                onMouseOut={() => {\n                  setCurrentCard(\"\");\n                }}\n                raised={currentCard === product.product_name ? true : false}\n                className={classes.root}\n                // height={400}\n                onClick={() => {\n                  setProduct(product);\n                  handleOpen();\n                }}\n\n              >\n                <CardActionArea>\n                  <CardMedia\n                    className={classes.media}\n                    image={product.image_url}\n                    title={product.product_name}\n                    // height={200px}\n                  />\n                  <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {product.product_name}\n                    </Typography>\n                    {/* <ProductModal product={product} addToCart={addToCart}/> */}\n\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                      component=\"p\"\n                    >\n                      ${priceString}\n                      {/* <img className='card-image' src={product.image_url} /> */}\n                    </Typography>\n                  </CardContent>\n                </CardActionArea>\n                <CardActions></CardActions>\n              </Card>\n              <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n              >\n                {body}\n              </Modal>\n            </div>\n          );\n        })}\n      </Box>\n    );\n  }\n};\nexport default Products;\n","// import { Tabs, Tab } from \"react-bootstrap-tabs\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Products from \"./Products\";\nimport axios from 'axios'\n\n\n\nfunction Menu(props) {\n  const matches = useMediaQuery('(min-width:800px)');\n  const [value, setValue] = React.useState(0);\n  const [hovered, setHovered] = React.useState(null)\n  const [currentVariant, setVariant] = React.useState('none');\n  console.log(\"PROPPPP\", props)\n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      justifyContent: \"center\",\n      // flexGrow: 1,\n      // width: \"100%\",\n      color: 'red',\n      // backgroundColor:  'rgb(245, 245, 245)'\n      backgroundColor: 'white'\n      // backgroundColor: theme.palette.background.paper,\n    },\n    hovered: {\n      color: 'white',\n      backgroundColor: 'red'\n    },\n    scroller: {\n      flexGrow: \"0\"\n    }\n  }));\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    props.getProducts(props.categories[newValue]);\n  };\n  const handleHover = (cat)=>{\n    console.log(\"CATEGORY\", cat)\n    setHovered(cat)\n  }\n  const handleExit = ()=>{\n    setHovered('')\n  }\n\n\n  // React.useEffect(()=>{\n  // getCategories()})\n\n  const classes = useStyles()\n  // const categories = [\n  //   \"Meats\",\n  //   \"Sides\",\n  //   \"Combos\",\n  //   \"Dessert\",\n  //   \"Catering\",\n  //   \"Gift Shop\",\n  // ];\n  let mapTabs = (\n    props.categories.map((category)=>{\n      console.log(category)\n      return (\n      <Tab\n      onMouseEnter={()=>{handleHover(category)}}\n      onMouseLeave={() =>{handleExit()}}\n      className={hovered=== category ? classes.hovered : classes.paper}\n      label={category}>\n      </Tab>\n    )\n    })\n  )\n\n  // if (!matches){\n  //   setVariant('scrollable')\n  //   // console.log(matches)\n  // }\n\n  return (\n    <div >\n      {/* <AppBar position=\"static\" color=\"default\" centered> */}\n        <Tabs\n        classes={{root: classes.paper, scroller: classes.scroller}}\n        //  className=\"tab-content\"\n          value={value}\n          variant={\"scrollable\"}\n          scrollButtons=\"auto\"\n          onChange={handleChange}\n          centered\n        >\n          {mapTabs}\n        </Tabs>\n      {/* </AppBar> */}\n      {/* <div className=\"products-container\"> */}\n\n          <Products\n            convertPriceToString={props.convertPriceToString}\n            addToCart={props.addToCart}\n            products={props.products}\n            loaded={props.loaded}\n            cartItems={props.cartItems}\n          />\n      {/* </div> */}\n    </div>\n  );\n}\n\nexport default Menu;\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport Popper from '@material-ui/core/popper';\nimport React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Products from \"./Products\";\nimport axios from 'axios';\n\nfunction Navbar (props) {\n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      border: \"none\",\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(1),\n      marginTop: '15px',\n      backgroundColor: theme.palette.background.paper,\n      zIndex: 3,\n      height: '400px',\n      width: '400px',\n      borderRadius: '5%'\n    },\n    button: {\n      height: '40px',\n      float: 'right',\n      marginRight:'15px'\n    }\n  }));\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popper' : undefined;\n\n  return(\n  <div>\n        <button className={classes.button} aria-describedby={id} type=\"button\" onClick={handleClick}>\n        Cart(0)\n      </button>\n  <Popper\n    // className={classes.paper}]\n    id={id}\n    open={open}\n    anchorEl={anchorEl}\n    placement=\"bottom\"\n    disablePortal={false}\n    modifiers={{\n      // flip: {\n      //   enabled: false,\n      // },\n      // preventOverflow: {\n      //   enabled: true,\n      //   boundariesElement: 'viewport',\n      // },\n      arrow: {\n        enabled: true,\n        element: 'arrowRef',\n      },\n    }}>\n        <div className={classes.paper}>The content of the Popper.</div>\n      </Popper>\n  </div>\n  )\n}\nexport default Navbar;","// import React from \"react\";\nimport Banner from \"./Banner\";\nimport Cart from \"./Cart\";\nimport Menu from \"./Menu\";\nimport Axios from \"axios\";\nimport { Component } from \"React\";\nimport Navbar from \"./Navbar\";\n// import './bootstrap/dist/css/bootstrap.min.css';\n// import '../../node_modules/bootstrap/dist/css/bootstrap.min.css'\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      loaded: false,\n      total: 0,\n      cart: {},\n      categories: [],\n      // productIds: [],\n    };\n    this.getProducts = this.getProducts.bind(this);\n    this.addToCart = this.addToCart.bind(this);\n    this.clearOrder = this.clearOrder.bind(this);\n    this.getCategories = this.getCategories.bind(this);\n    this.convertPriceToString = this.convertPriceToString.bind(this);\n    // this.categorySelected = this.categorySelected.bind(this)\n  }\n  componentDidMount() {\n    this.getProducts(\"meats\");\n    this.getCategories();\n  }\n  convertPriceToString = (price) => {\n    let priceString = price.toString();\n    if (priceString.includes(\".\")) {\n      if (priceString.split(\".\")[1].length === 1) {\n        console.log(\"NEW STRING\", priceString);\n        priceString += \"0\";\n        console.log(\"STRING AGAIN\", priceString);\n      }\n    } else {\n      priceString += \".00\";\n    }\n    return priceString;\n  };\n  getCategories = () => {\n    Axios.get(\"/categories\").then((result) => {\n      console.log(\"CATEGORIES\", result.data);\n      let cats = [];\n      for (let i = 0; i < result.data.length; i++) {\n        cats.push(result.data[i].name);\n      }\n      this.setState({ categories: cats });\n    });\n  };\n  getProducts(category) {\n    Axios.get(\"/products\", {\n      params: {\n        product: category,\n      },\n    })\n      .then((result) => {\n        this.setState({\n          products: result.data,\n          loaded: true,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  addToCart(item) {\n    // let ids = this.state.productIds;\n    let total = this.state.total;\n    let cartItems = this.state.cart;\n    console.log(\"ITEMMMM\", item);\n    if (!cartItems[item.productName]) {\n      cartItems[item.productName] = {\n        quantity: item.quantity,\n        id: item.id,\n        originalQuantity: item.originalQuantity,\n        price: item.price,\n      };\n    } else {\n      cartItems[item.productName].quantity += item.quantity;\n    }\n    console.log(\"TOTAL TYPE\", typeof total);\n    total += item.price * item.quantity;\n    console.log(\"parse\", parseInt(total));\n    this.setState({ cart: cartItems, total: total });\n  }\n\n  clearOrder() {\n    this.setState({ cart: {}, total: 0 });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"fixed-header\">\n            <Navbar />\n          </div>\n          <div className=\"header\">\n            <Banner />\n          </div>\n          <div className=\"body\">\n            <Menu\n              addToCart={this.addToCart}\n              getProducts={this.getProducts}\n              products={this.state.products}\n              loaded={this.state.loaded}\n              cartItems={this.state.cart}\n              categories={this.state.categories}\n              convertPriceToString={this.convertPriceToString}\n            />\n          </div>\n          <div className=\"bbqList\">\n            <Cart\n              clearOrder={this.clearOrder}\n              total={this.state.total}\n              products={this.state.products}\n              cartItems={this.state.cart}\n              convertPriceToString={this.convertPriceToString}\n            />\n          </div>\n          <div className=\"footer\"></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nconst useRowStyles = makeStyles({\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n});\nfunction Row(props) {\n  const { row } = props;\n  const [open, setOpen] = React.useState(false);\n  const classes = useRowStyles();\n  row.products = row.products || []\n  console.log(\"ROW!!!!!!!\", row)\n  let rowSplit = row.deliveryDate.split('-')\n  let year = rowSplit[0];\n  let day = rowSplit[2].slice(0,2);\n  let month = rowSplit[1];\n  let date = `${month}/${day}/${year}`\n  return (\n    <React.Fragment>\n\n      <TableRow className={classes.root}>\n        <TableCell>\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.name}\n        </TableCell>\n        <TableCell align=\"right\">{row.neighborhood}</TableCell>\n        <TableCell align=\"right\">{row.address}</TableCell>\n        <TableCell align=\"right\">{row.email}</TableCell>\n        <TableCell align=\"right\">{row.phone}</TableCell>\n        <TableCell align=\"right\">{date}</TableCell>\n        <TableCell align=\"right\">{row.total}</TableCell>\n        <button>\n        order fulfilled\n      </button>\n\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                Order Summary\n              </Typography>\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableHead>\n                  <TableRow>\n                  <TableCell align=\"right\">Quantity</TableCell>\n                    <TableCell>Product</TableCell>\n                    <TableCell>Price</TableCell>\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {row.products.map((productRow) => {\n                    console.log(\"proRo\", productRow)\n                    return(\n                    <TableRow key={productRow.productName}>\n                    <TableCell align=\"right\">{productRow.quantity}</TableCell>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {productRow.productName}\n                      </TableCell>\n                      <TableCell>${productRow.price}</TableCell>\n                    </TableRow>\n\n                  )}\n                  )}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n\n    </React.Fragment>\n  );\n}\nexport default Row;","import React from \"react\";\nimport Axios from \"axios\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Row from './Row'\n\nclass Orders extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { rows: [], orders: {}, loaded: false };\n    this.createData=this.createData.bind(this);\n    this.fillRows = this.fillRows.bind(this);\n    this.getOrders = this.getOrders.bind(this);\n  }\n  componentDidMount() {\n    this.getOrders();\n\n  }\n  getOrders() {\n    Axios.get(\"/getOrders\")\n      .then((result) => {\n        console.log(\"getOrders\",result.data);\n        this.setState({orders: result.data, loaded: true})\n        console.log(\"!!!!\",  this.state.orders)\n        for (let order in this.state.orders){\n          let total = 0;\n          for (let i = 0; i < this.state.orders[order].products.length; i++){\n            total += this.state.orders[order].products[i].price\n          } console.log(\"TOTAL!!\", total)\n        }\n      })\n      .then((result)=>{\n        this.fillRows()\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n\n\n  createData(name, neighborhood, address, email, phone, deliveryDate, total, products) {\n    return {\n      name,\n      neighborhood,\n      address,\n      email,\n      phone,\n      deliveryDate,\n      total,\n      products,\n    };\n  }\n\n    fillRows() {\n  const rows = []\n    for (let product in this.state.orders){\n      console.log(\"PRODUCT\", product, \"STATE ORDERS\", this.state.orders)\n      let total = 0;\n      for (let i = 0; i < this.state.orders[product].products.length; i++){\n        total+= (this.state.orders[product].products[i].price * this.state.orders[product].products[i].quantity)\n\n    }\n    let priceString = total.toString()\n      console.log(priceString.length)\n      if (priceString.includes('.')){\n      if(priceString.split('.')[1].length ===1){\n        priceString += '0'\n      }\n      if(priceString.split('.')[1].length > 2){\n        priceString = priceString.split('.')[0] + '.' + priceString.split('.')[1].slice(0,2)\n      }\n\n    } else{\n        priceString+='.00'\n      }\n      console.log(\"TOTAL BEFORE PUSHING\",  priceString)\n    rows.push(this.createData(this.state.orders[product].customer, this.state.orders[product].neighborhood, this.state.orders[product].address, this.state.orders[product].email, this.state.orders[product].phone, this.state.orders[product].deliveryDate, `$${priceString}`, this.state.orders[product].products)\n    )\n    }\n    console.log(\"America\", rows)\n    this.setState({rows: rows})\n  }\n  render(){\n    return (\n      <TableContainer component={Paper}>\n        <Table aria-label=\"collapsible table\">\n          <TableHead>\n            <TableRow>\n              <TableCell />\n              <TableCell> Customer Name</TableCell>\n              <TableCell align=\"right\">Neighborhood</TableCell>\n              <TableCell align=\"right\">Address\n              </TableCell>\n              <TableCell align=\"right\">Email</TableCell>\n              <TableCell align=\"right\">Phone</TableCell>\n              <TableCell align=\"right\">Delivery Date </TableCell>\n              <TableCell align=\"right\">Total</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.state.rows.map((row) => (\n              <Row key={row.name} row={row} />\n            ))}\n          </TableBody>\n\n        </Table>\n      </TableContainer>\n    );\n  }\n}\n  export default Orders;","import React from \"react\";\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Home from './components/Home';\nimport Orders from './components/Orders';\nexport default function App() {\n  return (\n    <Router>\n\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/orders\">\n            <Orders />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n        <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/orders\">Orders</Link>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </Router>\n  );\n}\n\n// function Home() {\n//   return <h2>Home</h2>;\n// }\n\n\n\n// function Users() {\n//   return <h2>Users</h2>;\n// }\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}