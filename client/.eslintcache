[{"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Orders.js":"1","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Banner.js":"2","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/index.js":"3","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Menu.js":"4","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Row.js":"5","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Cart.js":"6","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Home.js":"7","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/App.js":"8","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/reportWebVitals.js":"9","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/CheckoutModal.js":"10","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/TabPanel.js":"11","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Products.js":"12"},{"size":3916,"mtime":1610221046134,"results":"13","hashOfConfig":"14"},{"size":229,"mtime":1610068849996,"results":"15","hashOfConfig":"14"},{"size":500,"mtime":1609965229047,"results":"16","hashOfConfig":"14"},{"size":2602,"mtime":1612063470936,"results":"17","hashOfConfig":"14"},{"size":3534,"mtime":1610236774010,"results":"18","hashOfConfig":"14"},{"size":1467,"mtime":1612029140423,"results":"19","hashOfConfig":"14"},{"size":3033,"mtime":1612062980628,"results":"20","hashOfConfig":"14"},{"size":956,"mtime":1610059221325,"results":"21","hashOfConfig":"14"},{"size":362,"mtime":1609965229048,"results":"22","hashOfConfig":"14"},{"size":6672,"mtime":1612026050722,"results":"23","hashOfConfig":"14"},{"size":576,"mtime":1610057932502,"results":"24","hashOfConfig":"14"},{"size":7274,"mtime":1612063149298,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"1nb7gdg",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Orders.js",["60"],"import React from \"react\";\nimport Axios from \"axios\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Row from './Row'\n\n// const useRowStyles = makeStyles({\n//   root: {\n//     '& > *': {\n//       borderBottom: 'unset',\n//     },\n//   },\n// });\nclass Orders extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { rows: [], orders: {}, loaded: false };\n    this.createData=this.createData.bind(this);\n    this.fillRows = this.fillRows.bind(this);\n    this.getOrders = this.getOrders.bind(this);\n  }\n  componentDidMount() {\n    this.getOrders();\n\n  }\n  getOrders() {\n    Axios.get(\"/getOrders\")\n      .then((result) => {\n        console.log(\"getOrders\",result.data);\n        this.setState({orders: result.data, loaded: true})\n        console.log(\"!!!!\",  this.state.orders)\n        for (let order in this.state.orders){\n          let total = 0;\n          for (let i = 0; i < this.state.orders[order].products.length; i++){\n            total += this.state.orders[order].products[i].price\n          } console.log(\"TOTAL!!\", total)\n        }\n      })\n      .then((result)=>{\n        this.fillRows()\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n\n\n  createData(name, neighborhood, address, email, phone, deliveryDate, total, products) {\n    return {\n      name,\n      neighborhood,\n      address,\n      email,\n      phone,\n      deliveryDate,\n      total,\n      products,\n    };\n  }\n\n    fillRows() {\n  const rows = []\n    for (let product in this.state.orders){\n      console.log(\"PRODUCT\", product, \"STATE ORDERS\", this.state.orders)\n      let total = 0;\n      for (let i = 0; i < this.state.orders[product].products.length; i++){\n        total+= (this.state.orders[product].products[i].price * this.state.orders[product].products[i].quantity)\n\n    }\n    let priceString = total.toString()\n      console.log(priceString.length)\n      if (priceString.includes('.')){\n      if(priceString.split('.')[1].length ===1){\n        priceString += '0'\n      }\n      if(priceString.split('.')[1].length > 2){\n        priceString = priceString.split('.')[0] + '.' + priceString.split('.')[1].slice(0,2)\n      }\n\n    } else{\n        priceString+='.00'\n      }\n      console.log(\"TOTAL BEFORE PUSHING\",  priceString)\n    rows.push(this.createData(this.state.orders[product].customer, this.state.orders[product].neighborhood, this.state.orders[product].address, this.state.orders[product].email, this.state.orders[product].phone, this.state.orders[product].deliveryDate, `$${priceString}`, this.state.orders[product].products)\n    )\n    }\n    console.log(\"America\", rows)\n    this.setState({rows: rows})\n  }\n  render(){\n    return (\n      <TableContainer component={Paper}>\n        <Table aria-label=\"collapsible table\">\n          <TableHead>\n            <TableRow>\n              <TableCell />\n              <TableCell> Customer Name</TableCell>\n              <TableCell align=\"right\">Neighborhood</TableCell>\n              <TableCell align=\"right\">Address\n              </TableCell>\n              <TableCell align=\"right\">Email</TableCell>\n              <TableCell align=\"right\">Phone</TableCell>\n              <TableCell align=\"right\">Delivery Date </TableCell>\n              <TableCell align=\"right\">Total</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.state.rows.map((row) => (\n              <Row key={row.name} row={row} />\n            ))}\n          </TableBody>\n\n        </Table>\n      </TableContainer>\n    );\n  }\n}\n  export default Orders;","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Banner.js",["61"],"import React from 'react';\n\nconst Banner = (props) =>{\nreturn (\n  <div className='bannerContainer'>\n    <img className='logo' src={'https://bbqbucket2020.s3.us-east-2.amazonaws.com/logo.jpg'}/>\n  </div>\n)\n}\nexport default Banner;",["62","63"],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/index.js",[],["64","65"],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Menu.js",["66","67","68","69","70"],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Row.js",["71","72","73"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nconst useRowStyles = makeStyles({\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n});\nfunction Row(props) {\n  const { row } = props;\n  const [open, setOpen] = React.useState(false);\n  const classes = useRowStyles();\n  row.products = row.products || []\n  console.log(\"ROW!!!!!!!\", row)\n  let rowSplit = row.deliveryDate.split('-')\n  let year = rowSplit[0];\n  let day = rowSplit[2].slice(0,2);\n  let month = rowSplit[1];\n  let date = `${month}/${day}/${year}`\n  return (\n    <React.Fragment>\n\n      <TableRow className={classes.root}>\n        <TableCell>\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.name}\n        </TableCell>\n        <TableCell align=\"right\">{row.neighborhood}</TableCell>\n        <TableCell align=\"right\">{row.address}</TableCell>\n        <TableCell align=\"right\">{row.email}</TableCell>\n        <TableCell align=\"right\">{row.phone}</TableCell>\n        <TableCell align=\"right\">{date}</TableCell>\n        <TableCell align=\"right\">{row.total}</TableCell>\n        <button>\n        order fulfilled\n      </button>\n\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                Order Summary\n              </Typography>\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableHead>\n                  <TableRow>\n                  <TableCell align=\"right\">Quantity</TableCell>\n                    <TableCell>Product</TableCell>\n                    <TableCell>Price</TableCell>\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {row.products.map((productRow) => {\n                    console.log(\"proRo\", productRow)\n                    return(\n                    <TableRow key={productRow.productName}>\n                    <TableCell align=\"right\">{productRow.quantity}</TableCell>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {productRow.productName}\n                      </TableCell>\n                      <TableCell>${productRow.price}</TableCell>\n                    </TableRow>\n\n                  )}\n                  )}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n\n    </React.Fragment>\n  );\n}\nexport default Row;","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Cart.js",["74","75"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport CheckoutModal from './CheckoutModal'\n\nconst Cart = (props) =>{\n  const convertPriceToString = (price)=>{\n    console.log(\"func console\", props.cartItems)\n  let priceString = price.toString();\n  if (priceString.includes(\".\")) {\n    if (priceString.split(\".\")[1].length === 1) {\n      priceString += \"0\";\n    }\n    if (priceString.split(\".\")[1].length > 2) {\n      priceString =\n        priceString.split(\".\")[0] +\n        \".\" +\n        priceString.split(\".\")[1].slice(0, 2);\n    }\n  } else {\n    priceString += \".00\";\n  }\n  return priceString\n}\nlet priceString = convertPriceToString(props.total)\n\n  let itemMap = null;\n  if (props.cartItems){\n    console.log(Object.keys(props.cartItems), \"item length\")\n    let selectedItems = Object.keys(props.cartItems);\n    console.log(\"products\", props.products, \"selected Items\", typeof selectedItems[0])\n    itemMap = selectedItems.map((item)=>(\n      <div>\n        {props.cartItems[item].quantity} X {item}: ${convertPriceToString(props.cartItems[item].price * props.cartItems[item].quantity)}\n      </div>\n    ))\n  }\n  return(\n  <div className={'cart-container'}>\n  {itemMap}\n\n  Total Due: ${priceString}\n  <CheckoutModal clearOrder={props.clearOrder} priceString={priceString} total={props.total} products={props.products} cartItems={props.cartItems}/>\n  </div>\n\n  )\n}\nexport default Cart;",["76","77"],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Home.js",[],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/App.js",[],["78","79"],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/reportWebVitals.js",[],["80","81"],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/CheckoutModal.js",[],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/TabPanel.js",[],["82","83"],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Products.js",["84","85","86","87","88","89","90"],{"ruleId":"91","severity":1,"message":"92","line":3,"column":10,"nodeType":"93","messageId":"94","endLine":3,"endColumn":20},{"ruleId":"95","severity":1,"message":"96","line":6,"column":5,"nodeType":"97","endLine":6,"endColumn":94},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"98","replacedBy":"102"},{"ruleId":"100","replacedBy":"103"},{"ruleId":"91","severity":1,"message":"104","line":4,"column":8,"nodeType":"93","messageId":"94","endLine":4,"endColumn":18},{"ruleId":"91","severity":1,"message":"105","line":5,"column":8,"nodeType":"93","messageId":"94","endLine":5,"endColumn":11},{"ruleId":"91","severity":1,"message":"106","line":11,"column":8,"nodeType":"93","messageId":"94","endLine":11,"endColumn":13},{"ruleId":"91","severity":1,"message":"107","line":16,"column":9,"nodeType":"93","messageId":"94","endLine":16,"endColumn":16},{"ruleId":"91","severity":1,"message":"108","line":19,"column":26,"nodeType":"93","messageId":"94","endLine":19,"endColumn":36},{"ruleId":"91","severity":1,"message":"109","line":2,"column":8,"nodeType":"93","messageId":"94","endLine":2,"endColumn":17},{"ruleId":"91","severity":1,"message":"110","line":10,"column":8,"nodeType":"93","messageId":"94","endLine":10,"endColumn":22},{"ruleId":"91","severity":1,"message":"111","line":14,"column":8,"nodeType":"93","messageId":"94","endLine":14,"endColumn":13},{"ruleId":"91","severity":1,"message":"92","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":20},{"ruleId":"91","severity":1,"message":"112","line":3,"column":8,"nodeType":"93","messageId":"94","endLine":3,"endColumn":13},{"ruleId":"98","replacedBy":"113"},{"ruleId":"100","replacedBy":"114"},{"ruleId":"98","replacedBy":"115"},{"ruleId":"100","replacedBy":"116"},{"ruleId":"98","replacedBy":"117"},{"ruleId":"100","replacedBy":"118"},{"ruleId":"98","replacedBy":"119"},{"ruleId":"100","replacedBy":"120"},{"ruleId":"91","severity":1,"message":"121","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":25},{"ruleId":"91","severity":1,"message":"122","line":1,"column":27,"nodeType":"93","messageId":"94","endLine":1,"endColumn":36},{"ruleId":"91","severity":1,"message":"123","line":13,"column":8,"nodeType":"93","messageId":"94","endLine":13,"endColumn":12},{"ruleId":"91","severity":1,"message":"124","line":22,"column":10,"nodeType":"93","messageId":"94","endLine":22,"endColumn":22},{"ruleId":"91","severity":1,"message":"125","line":22,"column":24,"nodeType":"93","messageId":"94","endLine":22,"endColumn":40},{"ruleId":"91","severity":1,"message":"107","line":24,"column":9,"nodeType":"93","messageId":"94","endLine":24,"endColumn":16},{"ruleId":"95","severity":1,"message":"96","line":132,"column":7,"nodeType":"97","endLine":132,"endColumn":75},"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["126"],"no-negated-in-lhs",["127"],["126"],["127"],"'Typography' is defined but never used.","'Box' is defined but never used.","'axios' is defined but never used.","'matches' is assigned a value but never used.","'setVariant' is assigned a value but never used.","'PropTypes' is defined but never used.","'TableContainer' is defined but never used.","'Paper' is defined but never used.","'Modal' is defined but never used.",["126"],["127"],["126"],["127"],["126"],["127"],["126"],["127"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'Grid' is defined but never used.","'customerName' is assigned a value but never used.","'handleNameChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]