[{"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Cart.js":"1","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/index.js":"2","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Banner.js":"3","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Row.js":"4","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Products.js":"5","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Menu.js":"6","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Home.js":"7","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Orders.js":"8","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/reportWebVitals.js":"9","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/CheckoutModal.js":"10","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/App.js":"11","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/TabPanel.js":"12"},{"size":803,"mtime":1610222390269,"results":"13","hashOfConfig":"14"},{"size":500,"mtime":1609965229047,"results":"15","hashOfConfig":"14"},{"size":229,"mtime":1610068849996,"results":"16","hashOfConfig":"14"},{"size":3534,"mtime":1610236774010,"results":"17","hashOfConfig":"14"},{"size":5939,"mtime":1610230800362,"results":"18","hashOfConfig":"14"},{"size":2399,"mtime":1610229393812,"results":"19","hashOfConfig":"14"},{"size":3027,"mtime":1610221481268,"results":"20","hashOfConfig":"14"},{"size":3916,"mtime":1610221046134,"results":"21","hashOfConfig":"14"},{"size":362,"mtime":1609965229048,"results":"22","hashOfConfig":"14"},{"size":5907,"mtime":1611866871724,"results":"23","hashOfConfig":"14"},{"size":956,"mtime":1610059221325,"results":"24","hashOfConfig":"14"},{"size":576,"mtime":1610057932502,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"1nb7gdg",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Cart.js",["62","63"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport CheckoutModal from './CheckoutModal'\n\nconst Cart = (props) =>{\n  let priceString = props.total.toString();\n  if (priceString.includes(\".\")) {\n    if (priceString.split(\".\")[1].length === 1) {\n      priceString += \"0\";\n    }\n    if (priceString.split(\".\")[1].length > 2) {\n      priceString =\n        priceString.split(\".\")[0] +\n        \".\" +\n        priceString.split(\".\")[1].slice(0, 2);\n    }\n  } else {\n    priceString += \".00\";\n  }\n  return(\n  <div>\n  <CheckoutModal clearOrder={props.clearOrder} priceString={priceString} total={props.total} products={props.products} cartItems={props.cartItems}/>\n  Total Due:\n  ${priceString}\n  </div>\n\n  )\n}\nexport default Cart;",["64","65"],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/index.js",[],["66","67"],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Banner.js",["68"],"import React from 'react';\n\nconst Banner = (props) =>{\nreturn (\n  <div className='bannerContainer'>\n    <img className='logo' src={'https://bbqbucket2020.s3.us-east-2.amazonaws.com/logo.jpg'}/>\n  </div>\n)\n}\nexport default Banner;",["69","70"],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Row.js",["71","72","73"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nconst useRowStyles = makeStyles({\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n});\nfunction Row(props) {\n  const { row } = props;\n  const [open, setOpen] = React.useState(false);\n  const classes = useRowStyles();\n  row.products = row.products || []\n  console.log(\"ROW!!!!!!!\", row)\n  let rowSplit = row.deliveryDate.split('-')\n  let year = rowSplit[0];\n  let day = rowSplit[2].slice(0,2);\n  let month = rowSplit[1];\n  let date = `${month}/${day}/${year}`\n  return (\n    <React.Fragment>\n\n      <TableRow className={classes.root}>\n        <TableCell>\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.name}\n        </TableCell>\n        <TableCell align=\"right\">{row.neighborhood}</TableCell>\n        <TableCell align=\"right\">{row.address}</TableCell>\n        <TableCell align=\"right\">{row.email}</TableCell>\n        <TableCell align=\"right\">{row.phone}</TableCell>\n        <TableCell align=\"right\">{date}</TableCell>\n        <TableCell align=\"right\">{row.total}</TableCell>\n        <button>\n        order fulfilled\n      </button>\n\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                Order Summary\n              </Typography>\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableHead>\n                  <TableRow>\n                  <TableCell align=\"right\">Quantity</TableCell>\n                    <TableCell>Product</TableCell>\n                    <TableCell>Price</TableCell>\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {row.products.map((productRow) => {\n                    console.log(\"proRo\", productRow)\n                    return(\n                    <TableRow key={productRow.productName}>\n                    <TableCell align=\"right\">{productRow.quantity}</TableCell>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {productRow.productName}\n                      </TableCell>\n                      <TableCell>${productRow.price}</TableCell>\n                    </TableRow>\n\n                  )}\n                  )}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n\n    </React.Fragment>\n  );\n}\nexport default Row;",["74","75"],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Products.js",["76","77","78","79"],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Menu.js",["80","81","82","83"],"// import { Tabs, Tab } from \"react-bootstrap-tabs\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\n// import a11yProps from \"./a11yProps\";\n\nimport Products from \"./Products\";\nimport TabPanel from \"./TabPanel\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: \"100%\",\n    // backgroundColor: theme.palette.background.paper,\n  },\n}));\nfunction Menu(props) {\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    props.getProducts(categories[newValue])\n  };\n\n  const categories = ['Meats', 'Sides', 'Combos', 'Dessert', 'Catering', 'Gift Shop']\n  return (\n\n    <div>\n      <AppBar position=\"static\" color=\"default\" centered>\n        <Tabs\n          className=\"tab-content\"\n          value={value}\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          onChange={handleChange}\n\n\n        >\n          <Tab className=\"menuTab\" label=\"Meats\">\n          </Tab>\n          <Tab\n            className=\"menuTab\"\n            label=\"Sides\"\n          >\n          </Tab>\n          <Tab\n            className=\"menuTab\"\n            label=\"Combos\"\n          >\n\n          </Tab>\n          <Tab\n            className=\"menuTab\"\n            eventKey=\"Dessert\"\n            title=\"Dessert\"\n            label=\"Dessert\"\n          >\n\n          </Tab>\n          <Tab\n            className=\"menuTab\"\n            eventKey=\"Catering\"\n            title=\"Catering\"\n            label=\"Catering\"\n          >\n\n          </Tab>\n          <Tab\n            className=\"menuTab\"\n            eventKey=\"Gift Shop\"\n            title=\"Gift Shop\"\n            label=\"Gift Shop\"\n          >\n             <Products\n              addToCart={props.addToCart}\n              products={props.products}\n              loaded={props.loaded}\n              cartItems={props.cartItems}\n            />\n          </Tab>\n        </Tabs>\n      </AppBar>\n      <Products\n              addToCart={props.addToCart}\n              products={props.products}\n              loaded={props.loaded}\n              cartItems={props.cartItems}\n            />\n    </div>\n  );\n}\n\nexport default Menu;\n","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Home.js",[],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Orders.js",["84"],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/reportWebVitals.js",[],["85","86"],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/CheckoutModal.js",["87"],"import React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport DatePicker from \"react-datepicker\";\nimport axios from \"axios\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as emailjs from 'emailjs-com'\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\n\nemailjs.init(\"user_975JwJzPB6r4yxiDzOfHn\");\n\nexport default function CheckoutModal(props) {\n  const [open, setOpen] = React.useState(false);\n  const [neighborhood, handleChange] = React.useState(\"Santa Rita Ranch South\");\n  const [customerName, handleNameChange] = React.useState(\"\");\n  const [streetAddress, handleStreetChange] = React.useState(\"\");\n  const [startDate, setStartDate] = React.useState(new Date());\n  const [email, handleEmailChange] = React.useState(\"\");\n  const [phone, handlePhoneChange] = React.useState(null);\n\n  console.log(\"props\", props)\n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      position: \"absolute\",\n      width: 400,\n      maxHeight: 800,\n      backgroundColor: theme.palette.background.paper,\n      border: \"2px solid #000\",\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  }));\n\n\n  const classes = useStyles();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    axios\n.post(\"/addOrder\", {\n        address: streetAddress,\n        customerName: customerName,\n        deliveryDate: startDate,\n        neighborhood: neighborhood,\n        cartItems: props.cartItems,\n        email: email,\n        phone: phone\n      })\n\n      .then((result) => {\n        let generateItemList = ()=> {\n          let productString= ''\n          let products = []\n          for (let item in props.cartItems){\n            products.push(item)\n          }\n          for (let i = 0; i < products.length; i++){\n            if (i === products.length-1){\n              productString += `${products[i]}`\n            } else {\n              productString += `${products[i]}, `\n            }\n          }\n          console.log(productString)\n          return productString\n      }\n        let templateParams = {\n          from_name: 'christopher.murray.bbqdev@gmail.com',\n          to_name: email,\n          customerName: customerName,\n          message_html: generateItemList()\n         }\n        emailjs.send(\n          'service_6gxzrwa',\n          'template_fu5eins',\n           templateParams,\n          'user_975JwJzPB6r4yxiDzOfHn'\n     )\n        for (let item in props.cartItems){\n          axios\n          .post('./updateQuantity', {quantity: (props.cartItems[item].originalQuantity - props.cartItems[item].quantity), productName: item}).then((result)=>{\n            // console.log(\"result of update\", result)\n\n          })\n          .catch((err)=>{\n            console.log(err)\n          })\n        }\n          handleClose()\n          props.clearOrder()\n\n      })\n        .catch((err)=>{\n          if (err){\n            console.log(err);\n          }\n        })\n        }\n\n  const body = (\n    <div className={classes.paper}>\n      <h2 id=\"simple-modal-title\">Delivery Info</h2>\n      <h3>Total ${props.priceString}</h3>\n      <div className=\"order-summary\"></div>\n      <div className=\"order-form\">\n        <form onSubmit={handleSubmit}>\n          <label>\n            Select Your Neighborhood:\n            <br />\n            <select\n              value={neighborhood}\n              onChange={(e) => handleChange(e.target.value)}\n            >\n              <option value=\"Santa Rita Ranch South\">Santa Rita Ranch South</option>\n              <option value=\"Santa Rita Ranch North\">Santa Rita Ranch North</option>\n              <option value=\"Morningstar\">Morningstar</option>\n            </select>\n          </label>\n          <br />\n          <label>\n            Name:\n            <br />\n            <input\n              type=\"text\"\n              value={customerName}\n              onChange={(e) => handleNameChange(e.target.value)}\n            />\n          </label>\n          <br />\n          <label>\n            Street Address:\n            <br />\n            <input\n              type=\"text\"\n              value={streetAddress}\n              onChange={(e) => handleStreetChange(e.target.value)}\n            />\n          </label>\n          <br />\n          <label>\n            Email Address:\n            <br />\n            <input\n              type=\"text\"\n              value={email}\n              onChange={(e) => handleEmailChange(e.target.value)}\n            />\n          </label>\n          <br />\n          <label>\n            Phone:\n            <br />\n            <input\n              type=\"text\"\n              value={phone}\n              onChange={(e) => handlePhoneChange(e.target.value)}\n            />\n          </label>\n          <br />\n          <label>\n            Delivery Date\n            <br />\n            <DayPicker\n              selected={startDate}\n              onChange={(date) => setStartDate(date)}\n              disabledDays={[\n        {\n          after: new Date(2021, 1, 31),\n          before: new Date(),\n        }\n      ]}\n      />\n            {/* <br/> */}\n          </label>\n          <br />\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    </div>\n  );\n  console.log(new Date().toISOString().slice(0, 19).replace(\"T\", \" \"));\n  return (\n    <div>\n      <Button backgroundColor=\"grey\" className=\"checkoutButton\" onClick={handleOpen}>\n      {/* <FontAwesomeIcon icon={[\"far\", \"coffee\"]} /> */}\n      Checkout\n      </Button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </div>\n  );\n}\n","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/App.js",[],["88","89"],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/TabPanel.js",[],["90","91"],{"ruleId":"92","severity":1,"message":"93","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":20},{"ruleId":"92","severity":1,"message":"96","line":3,"column":8,"nodeType":"94","messageId":"95","endLine":3,"endColumn":13},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"97","replacedBy":"101"},{"ruleId":"99","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":6,"column":5,"nodeType":"105","endLine":6,"endColumn":94},{"ruleId":"97","replacedBy":"106"},{"ruleId":"99","replacedBy":"107"},{"ruleId":"92","severity":1,"message":"108","line":2,"column":8,"nodeType":"94","messageId":"95","endLine":2,"endColumn":17},{"ruleId":"92","severity":1,"message":"109","line":10,"column":8,"nodeType":"94","messageId":"95","endLine":10,"endColumn":22},{"ruleId":"92","severity":1,"message":"110","line":14,"column":8,"nodeType":"94","messageId":"95","endLine":14,"endColumn":13},{"ruleId":"97","replacedBy":"111"},{"ruleId":"99","replacedBy":"112"},{"ruleId":"92","severity":1,"message":"113","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":25},{"ruleId":"92","severity":1,"message":"114","line":1,"column":27,"nodeType":"94","messageId":"95","endLine":1,"endColumn":36},{"ruleId":"92","severity":1,"message":"115","line":18,"column":10,"nodeType":"94","messageId":"95","endLine":18,"endColumn":22},{"ruleId":"92","severity":1,"message":"116","line":18,"column":24,"nodeType":"94","messageId":"95","endLine":18,"endColumn":40},{"ruleId":"92","severity":1,"message":"117","line":4,"column":8,"nodeType":"94","messageId":"95","endLine":4,"endColumn":18},{"ruleId":"92","severity":1,"message":"118","line":5,"column":8,"nodeType":"94","messageId":"95","endLine":5,"endColumn":11},{"ruleId":"92","severity":1,"message":"119","line":12,"column":8,"nodeType":"94","messageId":"95","endLine":12,"endColumn":16},{"ruleId":"92","severity":1,"message":"120","line":14,"column":7,"nodeType":"94","messageId":"95","endLine":14,"endColumn":16},{"ruleId":"92","severity":1,"message":"93","line":3,"column":10,"nodeType":"94","messageId":"95","endLine":3,"endColumn":20},{"ruleId":"97","replacedBy":"121"},{"ruleId":"99","replacedBy":"122"},{"ruleId":"92","severity":1,"message":"123","line":5,"column":8,"nodeType":"94","messageId":"95","endLine":5,"endColumn":18},{"ruleId":"97","replacedBy":"124"},{"ruleId":"99","replacedBy":"125"},{"ruleId":"97","replacedBy":"126"},{"ruleId":"99","replacedBy":"127"},"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","'Modal' is defined but never used.","no-native-reassign",["128"],"no-negated-in-lhs",["129"],["128"],["129"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["128"],["129"],"'PropTypes' is defined but never used.","'TableContainer' is defined but never used.","'Paper' is defined but never used.",["128"],["129"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'customerName' is assigned a value but never used.","'handleNameChange' is assigned a value but never used.","'Typography' is defined but never used.","'Box' is defined but never used.","'TabPanel' is defined but never used.","'useStyles' is assigned a value but never used.",["128"],["129"],"'DatePicker' is defined but never used.",["128"],["129"],["128"],["129"],"no-global-assign","no-unsafe-negation"]