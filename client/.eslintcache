[{"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Orders.js":"1","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Banner.js":"2","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/index.js":"3","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Menu.js":"4","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Row.js":"5","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Cart.js":"6","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Home.js":"7"},{"size":3916,"mtime":1610221046134,"results":"8","hashOfConfig":"9"},{"size":229,"mtime":1610068849996,"results":"10","hashOfConfig":"9"},{"size":500,"mtime":1609965229047,"results":"11","hashOfConfig":"9"},{"size":2431,"mtime":1611959656294,"results":"12","hashOfConfig":"9"},{"size":3534,"mtime":1610236774010,"results":"13","hashOfConfig":"9"},{"size":1439,"mtime":1611957893475,"results":"14","hashOfConfig":"9"},{"size":2592,"mtime":1611946497965,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1nb7gdg",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Orders.js",["31"],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Banner.js",["32"],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/index.js",[],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Menu.js",["33","34","35","36"],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Row.js",["37","38","39"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nconst useRowStyles = makeStyles({\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n});\nfunction Row(props) {\n  const { row } = props;\n  const [open, setOpen] = React.useState(false);\n  const classes = useRowStyles();\n  row.products = row.products || []\n  console.log(\"ROW!!!!!!!\", row)\n  let rowSplit = row.deliveryDate.split('-')\n  let year = rowSplit[0];\n  let day = rowSplit[2].slice(0,2);\n  let month = rowSplit[1];\n  let date = `${month}/${day}/${year}`\n  return (\n    <React.Fragment>\n\n      <TableRow className={classes.root}>\n        <TableCell>\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.name}\n        </TableCell>\n        <TableCell align=\"right\">{row.neighborhood}</TableCell>\n        <TableCell align=\"right\">{row.address}</TableCell>\n        <TableCell align=\"right\">{row.email}</TableCell>\n        <TableCell align=\"right\">{row.phone}</TableCell>\n        <TableCell align=\"right\">{date}</TableCell>\n        <TableCell align=\"right\">{row.total}</TableCell>\n        <button>\n        order fulfilled\n      </button>\n\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                Order Summary\n              </Typography>\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableHead>\n                  <TableRow>\n                  <TableCell align=\"right\">Quantity</TableCell>\n                    <TableCell>Product</TableCell>\n                    <TableCell>Price</TableCell>\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {row.products.map((productRow) => {\n                    console.log(\"proRo\", productRow)\n                    return(\n                    <TableRow key={productRow.productName}>\n                    <TableCell align=\"right\">{productRow.quantity}</TableCell>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {productRow.productName}\n                      </TableCell>\n                      <TableCell>${productRow.price}</TableCell>\n                    </TableRow>\n\n                  )}\n                  )}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n\n    </React.Fragment>\n  );\n}\nexport default Row;","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Cart.js",["40","41"],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Home.js",[],{"ruleId":"42","severity":1,"message":"43","line":3,"column":10,"nodeType":"44","messageId":"45","endLine":3,"endColumn":20},{"ruleId":"46","severity":1,"message":"47","line":6,"column":5,"nodeType":"48","endLine":6,"endColumn":94},{"ruleId":"42","severity":1,"message":"49","line":4,"column":8,"nodeType":"44","messageId":"45","endLine":4,"endColumn":18},{"ruleId":"42","severity":1,"message":"50","line":5,"column":8,"nodeType":"44","messageId":"45","endLine":5,"endColumn":11},{"ruleId":"42","severity":1,"message":"51","line":12,"column":8,"nodeType":"44","messageId":"45","endLine":12,"endColumn":16},{"ruleId":"42","severity":1,"message":"52","line":14,"column":7,"nodeType":"44","messageId":"45","endLine":14,"endColumn":16},{"ruleId":"42","severity":1,"message":"53","line":2,"column":8,"nodeType":"44","messageId":"45","endLine":2,"endColumn":17},{"ruleId":"42","severity":1,"message":"54","line":10,"column":8,"nodeType":"44","messageId":"45","endLine":10,"endColumn":22},{"ruleId":"42","severity":1,"message":"55","line":14,"column":8,"nodeType":"44","messageId":"45","endLine":14,"endColumn":13},{"ruleId":"42","severity":1,"message":"43","line":2,"column":10,"nodeType":"44","messageId":"45","endLine":2,"endColumn":20},{"ruleId":"42","severity":1,"message":"56","line":3,"column":8,"nodeType":"44","messageId":"45","endLine":3,"endColumn":13},"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Typography' is defined but never used.","'Box' is defined but never used.","'TabPanel' is defined but never used.","'useStyles' is assigned a value but never used.","'PropTypes' is defined but never used.","'TableContainer' is defined but never used.","'Paper' is defined but never used.","'Modal' is defined but never used."]