[{"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Banner.js":"1","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Cart.js":"2","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/index.js":"3","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Row.js":"4","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/reportWebVitals.js":"5","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Menu.js":"6","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Home.js":"7","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Orders.js":"8","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/App.js":"9","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Products.js":"10"},{"size":229,"mtime":1610068849996,"results":"11","hashOfConfig":"12"},{"size":1467,"mtime":1612029140423,"results":"13","hashOfConfig":"12"},{"size":500,"mtime":1609965229047,"results":"14","hashOfConfig":"12"},{"size":3534,"mtime":1610236774010,"results":"15","hashOfConfig":"12"},{"size":362,"mtime":1609965229048,"results":"16","hashOfConfig":"12"},{"size":2659,"mtime":1612115025588,"results":"17","hashOfConfig":"12"},{"size":3033,"mtime":1612062980628,"results":"18","hashOfConfig":"12"},{"size":3916,"mtime":1610221046134,"results":"19","hashOfConfig":"12"},{"size":956,"mtime":1610059221325,"results":"20","hashOfConfig":"12"},{"size":7576,"mtime":1612117440267,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"1nb7gdg",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Banner.js",["50"],"import React from 'react';\n\nconst Banner = (props) =>{\nreturn (\n  <div className='bannerContainer'>\n    <img className='logo' src={'https://bbqbucket2020.s3.us-east-2.amazonaws.com/logo.jpg'}/>\n  </div>\n)\n}\nexport default Banner;","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Cart.js",["51","52"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport CheckoutModal from './CheckoutModal'\n\nconst Cart = (props) =>{\n  const convertPriceToString = (price)=>{\n    console.log(\"func console\", props.cartItems)\n  let priceString = price.toString();\n  if (priceString.includes(\".\")) {\n    if (priceString.split(\".\")[1].length === 1) {\n      priceString += \"0\";\n    }\n    if (priceString.split(\".\")[1].length > 2) {\n      priceString =\n        priceString.split(\".\")[0] +\n        \".\" +\n        priceString.split(\".\")[1].slice(0, 2);\n    }\n  } else {\n    priceString += \".00\";\n  }\n  return priceString\n}\nlet priceString = convertPriceToString(props.total)\n\n  let itemMap = null;\n  if (props.cartItems){\n    console.log(Object.keys(props.cartItems), \"item length\")\n    let selectedItems = Object.keys(props.cartItems);\n    console.log(\"products\", props.products, \"selected Items\", typeof selectedItems[0])\n    itemMap = selectedItems.map((item)=>(\n      <div>\n        {props.cartItems[item].quantity} X {item}: ${convertPriceToString(props.cartItems[item].price * props.cartItems[item].quantity)}\n      </div>\n    ))\n  }\n  return(\n  <div className={'cart-container'}>\n  {itemMap}\n\n  Total Due: ${priceString}\n  <CheckoutModal clearOrder={props.clearOrder} priceString={priceString} total={props.total} products={props.products} cartItems={props.cartItems}/>\n  </div>\n\n  )\n}\nexport default Cart;","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/index.js",[],["53","54"],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Row.js",["55","56","57"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nconst useRowStyles = makeStyles({\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n});\nfunction Row(props) {\n  const { row } = props;\n  const [open, setOpen] = React.useState(false);\n  const classes = useRowStyles();\n  row.products = row.products || []\n  console.log(\"ROW!!!!!!!\", row)\n  let rowSplit = row.deliveryDate.split('-')\n  let year = rowSplit[0];\n  let day = rowSplit[2].slice(0,2);\n  let month = rowSplit[1];\n  let date = `${month}/${day}/${year}`\n  return (\n    <React.Fragment>\n\n      <TableRow className={classes.root}>\n        <TableCell>\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.name}\n        </TableCell>\n        <TableCell align=\"right\">{row.neighborhood}</TableCell>\n        <TableCell align=\"right\">{row.address}</TableCell>\n        <TableCell align=\"right\">{row.email}</TableCell>\n        <TableCell align=\"right\">{row.phone}</TableCell>\n        <TableCell align=\"right\">{date}</TableCell>\n        <TableCell align=\"right\">{row.total}</TableCell>\n        <button>\n        order fulfilled\n      </button>\n\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                Order Summary\n              </Typography>\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableHead>\n                  <TableRow>\n                  <TableCell align=\"right\">Quantity</TableCell>\n                    <TableCell>Product</TableCell>\n                    <TableCell>Price</TableCell>\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {row.products.map((productRow) => {\n                    console.log(\"proRo\", productRow)\n                    return(\n                    <TableRow key={productRow.productName}>\n                    <TableCell align=\"right\">{productRow.quantity}</TableCell>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {productRow.productName}\n                      </TableCell>\n                      <TableCell>${productRow.price}</TableCell>\n                    </TableRow>\n\n                  )}\n                  )}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n\n    </React.Fragment>\n  );\n}\nexport default Row;","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/reportWebVitals.js",[],["58","59"],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Menu.js",["60","61","62","63","64","65"],"// import { Tabs, Tab } from \"react-bootstrap-tabs\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Products from \"./Products\";\nimport axios from 'axios'\n\n\n\nfunction Menu(props) {\n  const matches = useMediaQuery('(min-width:800px)');\n  const [value, setValue] = React.useState(0);\n  const [hovered, setHovered] = React.useState(null)\n  const [currentVariant, setVariant] = React.useState('none');\n  console.log(\"PROPPPP\", props)\n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      // flexGrow: 1,\n      // width: \"100%\",\n      color: 'red',\n      // backgroundColor:  'rgb(245, 245, 245)'\n      backgroundColor: 'white'\n      // backgroundColor: theme.palette.background.paper,\n    },\n    hovered: {\n      color: 'white',\n      backgroundColor: 'red'\n    }\n  }));\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    props.getProducts(props.categories[newValue]);\n  };\n  const handleHover = (cat)=>{\n    console.log(\"CATEGORY\", cat)\n    setHovered(cat)\n  }\n  const handleExit = ()=>{\n    setHovered('')\n  }\n\n\n  // React.useEffect(()=>{\n  // getCategories()})\n\n  const classes = useStyles()\n  // const categories = [\n  //   \"Meats\",\n  //   \"Sides\",\n  //   \"Combos\",\n  //   \"Dessert\",\n  //   \"Catering\",\n  //   \"Gift Shop\",\n  // ];\n  let mapTabs = (\n    props.categories.map((category)=>{\n      console.log(category)\n      return (\n      <Tab\n      onMouseEnter={()=>{handleHover(category)}}\n      onMouseLeave={() =>{handleExit()}}\n      className={hovered=== category ? classes.hovered : classes.paper}\n      label={category}>\n      </Tab>\n    )\n    })\n  )\n\n  // if (!matches){\n  //   setVariant('scrollable')\n  //   // console.log(matches)\n  // }\n\n  return (\n    <div >\n      {/* <AppBar position=\"static\" color=\"default\" centered> */}\n        <Tabs\n         className=\"tab-content\"\n          value={value}\n          variant={currentVariant}\n          scrollButtons=\"auto\"\n          onChange={handleChange}\n          centered\n        >\n          {mapTabs}\n        </Tabs>\n      {/* </AppBar> */}\n      {/* <div className=\"products-container\"> */}\n\n          <Products\n            addToCart={props.addToCart}\n            products={props.products}\n            loaded={props.loaded}\n            cartItems={props.cartItems}\n          />\n      {/* </div> */}\n    </div>\n  );\n}\n\nexport default Menu;\n","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Home.js",[],["66","67"],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Orders.js",["68"],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/App.js",[],["69","70"],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Products.js",["71","72","73","74","75","76","77","78"],{"ruleId":"79","severity":1,"message":"80","line":6,"column":5,"nodeType":"81","endLine":6,"endColumn":94},{"ruleId":"82","severity":1,"message":"83","line":2,"column":10,"nodeType":"84","messageId":"85","endLine":2,"endColumn":20},{"ruleId":"82","severity":1,"message":"86","line":3,"column":8,"nodeType":"84","messageId":"85","endLine":3,"endColumn":13},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"82","severity":1,"message":"91","line":2,"column":8,"nodeType":"84","messageId":"85","endLine":2,"endColumn":17},{"ruleId":"82","severity":1,"message":"92","line":10,"column":8,"nodeType":"84","messageId":"85","endLine":10,"endColumn":22},{"ruleId":"82","severity":1,"message":"93","line":14,"column":8,"nodeType":"84","messageId":"85","endLine":14,"endColumn":13},{"ruleId":"87","replacedBy":"94"},{"ruleId":"89","replacedBy":"95"},{"ruleId":"82","severity":1,"message":"96","line":4,"column":8,"nodeType":"84","messageId":"85","endLine":4,"endColumn":18},{"ruleId":"82","severity":1,"message":"97","line":5,"column":8,"nodeType":"84","messageId":"85","endLine":5,"endColumn":11},{"ruleId":"82","severity":1,"message":"98","line":8,"column":8,"nodeType":"84","messageId":"85","endLine":8,"endColumn":14},{"ruleId":"82","severity":1,"message":"99","line":11,"column":8,"nodeType":"84","messageId":"85","endLine":11,"endColumn":13},{"ruleId":"82","severity":1,"message":"100","line":16,"column":9,"nodeType":"84","messageId":"85","endLine":16,"endColumn":16},{"ruleId":"82","severity":1,"message":"101","line":19,"column":26,"nodeType":"84","messageId":"85","endLine":19,"endColumn":36},{"ruleId":"87","replacedBy":"102"},{"ruleId":"89","replacedBy":"103"},{"ruleId":"82","severity":1,"message":"83","line":3,"column":10,"nodeType":"84","messageId":"85","endLine":3,"endColumn":20},{"ruleId":"87","replacedBy":"104"},{"ruleId":"89","replacedBy":"105"},{"ruleId":"82","severity":1,"message":"106","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":25},{"ruleId":"82","severity":1,"message":"107","line":1,"column":27,"nodeType":"84","messageId":"85","endLine":1,"endColumn":36},{"ruleId":"82","severity":1,"message":"108","line":13,"column":8,"nodeType":"84","messageId":"85","endLine":13,"endColumn":12},{"ruleId":"82","severity":1,"message":"109","line":14,"column":8,"nodeType":"84","messageId":"85","endLine":14,"endColumn":17},{"ruleId":"82","severity":1,"message":"110","line":22,"column":10,"nodeType":"84","messageId":"85","endLine":22,"endColumn":22},{"ruleId":"82","severity":1,"message":"111","line":22,"column":24,"nodeType":"84","messageId":"85","endLine":22,"endColumn":40},{"ruleId":"82","severity":1,"message":"100","line":24,"column":9,"nodeType":"84","messageId":"85","endLine":24,"endColumn":16},{"ruleId":"79","severity":1,"message":"80","line":149,"column":7,"nodeType":"81","endLine":149,"endColumn":75},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","'Modal' is defined but never used.","no-native-reassign",["112"],"no-negated-in-lhs",["113"],"'PropTypes' is defined but never used.","'TableContainer' is defined but never used.","'Paper' is defined but never used.",["112"],["113"],"'Typography' is defined but never used.","'Box' is defined but never used.","'AppBar' is defined but never used.","'axios' is defined but never used.","'matches' is assigned a value but never used.","'setVariant' is assigned a value but never used.",["112"],["113"],["112"],["113"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'Grid' is defined but never used.","'Container' is defined but never used.","'customerName' is assigned a value but never used.","'handleNameChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]