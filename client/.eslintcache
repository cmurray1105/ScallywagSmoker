[{"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Home.js":"1","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/index.js":"2","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Navbar.js":"3","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/CartItem.js":"4","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Orders.js":"5","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Inventory.js":"6","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Banner.js":"7","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Menu.js":"8","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Admin.js":"9","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Cart.js":"10","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/App.js":"11"},{"size":5447,"mtime":1612637870869,"results":"12","hashOfConfig":"13"},{"size":500,"mtime":1609965229047,"results":"14","hashOfConfig":"13"},{"size":5353,"mtime":1612466014604,"results":"15","hashOfConfig":"13"},{"size":2268,"mtime":1612408356956,"results":"16","hashOfConfig":"13"},{"size":4089,"mtime":1612642048497,"results":"17","hashOfConfig":"13"},{"size":1491,"mtime":1612648677146,"results":"18","hashOfConfig":"13"},{"size":229,"mtime":1610068849996,"results":"19","hashOfConfig":"13"},{"size":2176,"mtime":1612321828424,"results":"20","hashOfConfig":"13"},{"size":2110,"mtime":1612648783203,"results":"21","hashOfConfig":"13"},{"size":1602,"mtime":1612306933688,"results":"22","hashOfConfig":"13"},{"size":1101,"mtime":1612413623781,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tmrx8t",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Home.js",[],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/index.js",[],["56","57"],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Navbar.js",["58","59","60","61","62","63","64"],"import { makeStyles } from \"@material-ui/core/styles\";\n// import Popper from '@material-ui/core/popper';\nimport React, { ReactElement } from \"react\";\nimport TableChartIcon from \"@material-ui/icons/TableChart\";\nimport { ClickAwayListener } from \"@material-ui/core\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n// import \"./styles.css\";\nimport CartPopper from \"./CartPopper\";\nimport CheckoutModal from \"./CheckoutModal\";\nimport CartItem from \"./CartItem\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\nfunction Navbar(props) {\n  const [open, setOpen] = React.useState(false);\n  const [height, setHeight] = React.useState(\"400px\");\n  const [anchorEl, handleAnchor] = React.useState(null);\n  const [arrowRef, handleArrowRef] = React.useState(null);\n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      border: \"none\",\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(1),\n      backgroundColor: theme.palette.background.paper,\n      zIndex: 3,\n      height: \"max-content\",\n      minHeight: \"400px\",\n      width: \"500px\",\n      borderRadius: \"6px\",\n      margin: \"auto\",\n      display: \"grid\",\n      gridTemplateColumns: \"1fr 1fr 1fr\",\n      gridTemplateRows: \"4fr 1fr\",\n      gridTemplateAreas: \" 'side list side'  'side checkout side\",\n      // alignItems: 'center'\n    },\n    buttonContainer: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      textAlign: \"center\",\n      marginLeft: \"85%\",\n    },\n    button: {\n      height: \"38px\",\n      width: \"38px\",\n      background: \"white\",\n      border: \"none\",\n      color: \"red\",\n      cursor: \"pointer\",\n      textAlign: \"center\",\n      display: \"inline-block\",\n      outline: \"none\",\n    },\n    cartContainer: {\n      gridArea: \"list\",\n    },\n    checkoutArea: {\n      gridArea: \"checkout\",\n    },\n    total: {\n      height: \"64px\",\n    },\n    totalText: {\n      marginLeft: '40%',\n      // marginTop: '10%',\n      // transform: 'translate(50%, 50%)'\n    },\n    emptyCart: {\n      // position: 'absolute',\n      // marginTop: '50%',\n      // marginLeft: '40%',\n      alignItems: 'center'\n    }\n  }));\n  const classes = useStyles();\n\n  const node = React.useRef();\n  console.log(\"nodey node:\", node);\n\n  const handleClick = (event) => {\n    handleAnchor(anchorEl ? null : event.currentTarget);\n    console.log(\"ANCHORS AWAY!\", anchorEl);\n    setOpen(!open);\n  };\n\n  let items = [];\n  for (let order in props.cartItems) {\n    items.push(props.cartItems[order]);\n  }\n\n  // if (Object.keys(props.cartItems).length > 4){\n  //   let itemsOverFour = Object.keys(props.cartItems).length - 4\n  //   let newHeight = (400 + 64 * itemsOverFour).toString()+'px'\n  //   setHeight(newHeight)\n  // }\n  let total = 0;\n  for (let item in props.cartItems){\n    // console.log(\"WHAT AN ITEM LOOKS LIKE\",\n    total = total + ((props.cartItems[item].price) * props.cartItems[item].quantity)\n  }\n\n\n  return (\n    // <ClickAwayListener onClickAway={handleClickAway}>\n    <div>\n      <div className={classes.buttonContainer}>\n        <button className={classes.button} onClick={handleClick}>\n          <FontAwesomeIcon icon={faShoppingCart} size=\"2x\" />\n          <span>{props.quantity}</span>\n        </button>\n      </div>\n      <CartPopper\n        ref={node}\n        placement=\"top\"\n        open={open}\n        anchorEl={anchorEl}\n        modifiers={{\n          flip: {\n            enabled: true,\n          },\n          arrow: {\n            enabled: true,\n            element: arrowRef,\n          },\n          preventOverflow: {\n            enabled: \"true\",\n            boundariesElement: \"scrollParent\",\n          },\n        }}\n      >\n        {true && <span className=\"arrow\" ref={handleArrowRef} />}\n        <div className={classes.paper}>\n          <div className=\"cartContainer\">\n            {/* MAP CART ITEMS OR DISPLAY EMPTY CART */}\n\n            {props.quantity > 0 ? items.map((item) => (\n              <>\n                <CartItem\n                  increaseQuantity={props.increaseQuantity}\n                  decreaseQuantity={props.decreaseQuantity}\n                  products={props.products}\n                  item={item}\n                  convertPriceToString={props.convertPriceToString}\n                />\n                <hr />\n              </>\n            )):\n\n            <div>\n            <FontAwesomeIcon className={classes.emptyCart} icon={faShoppingCart} size=\"5x\" />\n            <h1 className={classes.emptyCart}>Your Cart Is Empty</h1>\n            </div>\n            }\n          </div>\n\n          <div className=\"checkoutArea\">\n            {/* IF CART IS NOT EMPTY RENDER CHECKOUTMODAL BUTTON*/}\n            {props.quantity > 0 ? (\n              <>\n                <div className={classes.total}>\n                  <hr />\n                  <h2 className={classes.totalText}>${props.convertPriceToString(total)}</h2>\n                  {/* <hr /> */}\n                </div>\n                <CheckoutModal\n                  clearOrder={props.clearOrder}\n                  total={total}\n                  products={props.products}\n                  cartItems={props.cartItems}\n                />\n              </>\n            ) : null\n}\n          </div>\n        </div>\n      </CartPopper>\n    </div>\n    // </ClickAwayListener>\n  );\n}\nexport default Navbar;\n",["65","66"],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/CartItem.js",["67","68","69","70"],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Orders.js",["71"],"import React from \"react\";\nimport Axios from \"axios\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Row from './Row'\n\nclass Orders extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { rows: [], orders: {}, loaded: false };\n    this.createData=this.createData.bind(this);\n    this.fillRows = this.fillRows.bind(this);\n    this.getOrders = this.getOrders.bind(this);\n  }\n  componentDidMount() {\n    this.getOrders();\n\n  }\n  getOrders() {\n    Axios.get(\"/getOrders\")\n      .then((result) => {\n        console.log(\"getOrders\",result.data);\n        this.setState({orders: result.data, loaded: true})\n        console.log(\"!!!!\",  this.state.orders)\n        for (let order in this.state.orders){\n          let total = 0;\n          for (let i = 0; i < this.state.orders[order].products.length; i++){\n            total += this.state.orders[order].products[i].price\n          } console.log(\"TOTAL!!\", total)\n        }\n      })\n      .then((result)=>{\n        this.fillRows()\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  getCategories = () => {\n    Axios.get(\"/categories\").then((result) => {\n      console.log(\"CATEGORIES\", result.data);\n      let cats = [];\n      for (let i = 0; i < result.data.length; i++) {\n        cats.push(result.data[i].name);\n      }\n      this.setState({ categories: cats });\n    });\n  };\n\n\n\n  createData(name, neighborhood, address, email, phone, deliveryDate, total, products) {\n    return {\n      name,\n      neighborhood,\n      address,\n      email,\n      phone,\n      deliveryDate,\n      total,\n      products,\n    };\n  }\n\n    fillRows() {\n  const rows = []\n    for (let product in this.state.orders){\n      console.log(\"PRODUCT\", product, \"STATE ORDERS\", this.state.orders)\n      let total = 0;\n      for (let i = 0; i < this.state.orders[product].products.length; i++){\n        total+= (this.state.orders[product].products[i].price * this.state.orders[product].products[i].quantity)\n\n    }\n    let priceString = total.toString()\n      console.log(priceString.length)\n      if (priceString.includes('.')){\n      if(priceString.split('.')[1].length ===1){\n        priceString += '0'\n      }\n      if(priceString.split('.')[1].length > 2){\n        priceString = priceString.split('.')[0] + '.' + priceString.split('.')[1].slice(0,2)\n      }\n\n    } else{\n        priceString+='.00'\n      }\n      console.log(\"TOTAL BEFORE PUSHING\",  priceString)\n    rows.push(this.createData(this.state.orders[product].customer, this.state.orders[product].neighborhood, this.state.orders[product].address, this.state.orders[product].email, this.state.orders[product].phone, this.state.orders[product].deliveryDate, `$${priceString}`, this.state.orders[product].products)\n    )\n    }\n    console.log(\"America\", rows)\n    this.setState({rows: rows})\n  }\n  render(){\n    return (\n      <TableContainer component={Paper}>\n        <Table aria-label=\"collapsible table\">\n          <TableHead>\n            <TableRow>\n              <TableCell />\n              <TableCell> Customer Name</TableCell>\n              <TableCell align=\"right\">Neighborhood</TableCell>\n              <TableCell align=\"right\">Address\n              </TableCell>\n              <TableCell align=\"right\">Email</TableCell>\n              <TableCell align=\"right\">Phone</TableCell>\n              <TableCell align=\"right\">Delivery Date </TableCell>\n              <TableCell align=\"right\">Total</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.state.rows.map((row) => (\n              <Row key={row.name} row={row} />\n            ))}\n          </TableBody>\n\n        </Table>\n      </TableContainer>\n    );\n  }\n}\n  export default Orders;","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Inventory.js",[],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Banner.js",["72"],"import React from 'react';\n\nconst Banner = (props) =>{\nreturn (\n  <div className='bannerContainer'>\n    <img className='logo' src={'https://bbqbucket2020.s3.us-east-2.amazonaws.com/logo.jpg'}/>\n  </div>\n)\n}\nexport default Banner;","/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Menu.js",["73","74"],"// import { Tabs, Tab } from \"react-bootstrap-tabs\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n// import Typography from \"@material-ui/core/Typography\";\n// import Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\n// import AppBar from \"@material-ui/core/AppBar\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport Products from \"./Products\";\nimport CheckoutModal from \"./CheckoutModal\";\n\nfunction Menu(props) {\n  const matches = useMediaQuery(\"(min-width:800px)\");\n  const [value, setValue] = React.useState(0);\n  const [hovered, setHovered] = React.useState(null);\n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      justifyContent: \"center\",\n      color: \"red\",\n      backgroundColor: \"white\",\n    },\n    hovered: {\n      color: \"white\",\n      backgroundColor: \"red\",\n    },\n    scroller: {\n      flexGrow: \"0\",\n    },\n  }));\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    props.getProducts(props.categories[newValue]);\n  };\n  const handleHover = (cat) => {\n    console.log(\"CATEGORY\", cat);\n    setHovered(cat);\n  };\n  const handleExit = () => {\n    setHovered(\"\");\n  };\n\n  const classes = useStyles();\n\n  let mapTabs = props.categories.map((category) => {\n    console.log(category);\n    return (\n      <Tab\n        onMouseEnter={() => {\n          handleHover(category);\n        }}\n        onMouseLeave={() => {\n          handleExit();\n        }}\n        className={hovered === category ? classes.hovered : classes.paper}\n        label={category}\n      ></Tab>\n    );\n  });\n\n  return (\n    <div>\n      <Tabs\n        classes={{ root: classes.paper, scroller: classes.scroller }}\n        value={value}\n        variant={\"scrollable\"}\n        scrollButtons=\"auto\"\n        onChange={handleChange}\n        centered\n      >\n        {mapTabs}\n      </Tabs>\n      <Products\n        convertPriceToString={props.convertPriceToString}\n        addToCart={props.addToCart}\n        products={props.products}\n        loaded={props.loaded}\n        cartItems={props.cartItems}\n      />\n    </div>\n  );\n}\n\nexport default Menu;\n",["75","76"],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Admin.js",["77"],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/components/Cart.js",["78","79","80","81","82"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport CheckoutModal from './CheckoutModal'\n\nconst Cart = (props) =>{\n// const convertPriceToString = (price)=>{\n//   console.log(\"prop prop prop prop\", props)\n//     console.log(\"func console\", props.cartItems)\n//   let priceString = price.toString();\n//   if (priceString.includes(\".\")) {\n//     if (priceString.split(\".\")[1].length === 1) {\n//       priceString += \"0\";\n//     }\n//     if (priceString.split(\".\")[1].length > 2) {\n//       priceString =\n//         priceString.split(\".\")[0] +\n//         \".\" +\n//         priceString.split(\".\")[1].slice(0, 2);\n//     }\n//   } else {\n//     priceString += \".00\";\n//   }\n//   return priceString\n// }\nlet priceString = props.convertPriceToString(props.total)\n\n  let itemMap = null;\n  if (props.cartItems){\n    console.log(Object.keys(props.cartItems), \"item length\")\n    let selectedItems = Object.keys(props.cartItems);\n    console.log(\"products\", props.products, \"selected Items\", typeof selectedItems[0])\n    itemMap = selectedItems.map((item)=>(\n      <div>\n        {props.cartItems[item].quantity} X {item}: ${props.convertPriceToString(props.cartItems[item].price * props.cartItems[item].quantity)}\n      </div>\n    ))\n  }\n  return(\n  <div className={'cart-container'}>\n  {/* {itemMap} */}\n\n  {/* Total Due: ${priceString} */}\n  {/* <CheckoutModal clearOrder={props.clearOrder} priceString={priceString} total={props.total} products={props.products} cartItems={props.cartItems}/> */}\n  </div>\n\n  )\n}\nexport default Cart;",["83","84"],"/Users/christophermurray/Documents/GitHub/ScallywagSmoker/client/src/App.js",[],["85","86"],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":3,"column":17,"nodeType":"93","messageId":"94","endLine":3,"endColumn":29},{"ruleId":"91","severity":1,"message":"95","line":4,"column":8,"nodeType":"93","messageId":"94","endLine":4,"endColumn":22},{"ruleId":"91","severity":1,"message":"96","line":5,"column":10,"nodeType":"93","messageId":"94","endLine":5,"endColumn":27},{"ruleId":"91","severity":1,"message":"97","line":6,"column":10,"nodeType":"93","messageId":"94","endLine":6,"endColumn":23},{"ruleId":"91","severity":1,"message":"98","line":6,"column":25,"nodeType":"93","messageId":"94","endLine":6,"endColumn":39},{"ruleId":"91","severity":1,"message":"99","line":15,"column":10,"nodeType":"93","messageId":"94","endLine":15,"endColumn":16},{"ruleId":"91","severity":1,"message":"100","line":15,"column":18,"nodeType":"93","messageId":"94","endLine":15,"endColumn":27},{"ruleId":"87","replacedBy":"101"},{"ruleId":"89","replacedBy":"102"},{"ruleId":"91","severity":1,"message":"103","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":14},{"ruleId":"91","severity":1,"message":"104","line":2,"column":16,"nodeType":"93","messageId":"94","endLine":2,"endColumn":27},{"ruleId":"91","severity":1,"message":"105","line":2,"column":29,"nodeType":"93","messageId":"94","endLine":2,"endColumn":38},{"ruleId":"106","severity":1,"message":"107","line":70,"column":4,"nodeType":"108","endLine":73,"endColumn":11},{"ruleId":"91","severity":1,"message":"109","line":3,"column":10,"nodeType":"93","messageId":"94","endLine":3,"endColumn":20},{"ruleId":"106","severity":1,"message":"107","line":6,"column":5,"nodeType":"108","endLine":6,"endColumn":94},{"ruleId":"91","severity":1,"message":"110","line":11,"column":8,"nodeType":"93","messageId":"94","endLine":11,"endColumn":21},{"ruleId":"91","severity":1,"message":"111","line":14,"column":9,"nodeType":"93","messageId":"94","endLine":14,"endColumn":16},{"ruleId":"87","replacedBy":"112"},{"ruleId":"89","replacedBy":"113"},{"ruleId":"91","severity":1,"message":"114","line":7,"column":8,"nodeType":"93","messageId":"94","endLine":7,"endColumn":13},{"ruleId":"91","severity":1,"message":"109","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":20},{"ruleId":"91","severity":1,"message":"115","line":3,"column":8,"nodeType":"93","messageId":"94","endLine":3,"endColumn":13},{"ruleId":"91","severity":1,"message":"110","line":4,"column":8,"nodeType":"93","messageId":"94","endLine":4,"endColumn":21},{"ruleId":"91","severity":1,"message":"116","line":26,"column":5,"nodeType":"93","messageId":"94","endLine":26,"endColumn":16},{"ruleId":"91","severity":1,"message":"117","line":33,"column":5,"nodeType":"93","messageId":"94","endLine":33,"endColumn":12},{"ruleId":"87","replacedBy":"118"},{"ruleId":"89","replacedBy":"119"},{"ruleId":"87","replacedBy":"120"},{"ruleId":"89","replacedBy":"121"},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'ReactElement' is defined but never used.","Identifier","unusedVar","'TableChartIcon' is defined but never used.","'ClickAwayListener' is defined but never used.","'ThemeProvider' is defined but never used.","'createMuiTheme' is defined but never used.","'height' is assigned a value but never used.","'setHeight' is assigned a value but never used.",["122"],["123"],"'Card' is defined but never used.","'CardContent' is defined but never used.","'CardMedia' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'makeStyles' is defined but never used.","'CheckoutModal' is defined but never used.","'matches' is assigned a value but never used.",["122"],["123"],"'axios' is defined but never used.","'Modal' is defined but never used.","'priceString' is assigned a value but never used.","'itemMap' is assigned a value but never used.",["122"],["123"],["122"],["123"],"no-global-assign","no-unsafe-negation"]